"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import sys

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions
from builtins import (
    bool,
    bytes,
    float,
    int,
    str,
    type,
)
from collections.abc import (
    Iterable,
)
from google.protobuf.descriptor import (
    Descriptor,
    EnumDescriptor,
    FileDescriptor,
)
from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer,
    RepeatedScalarFieldContainer,
)
from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper,
)
from google.protobuf.message import (
    Message,
)
from typing import (
    Literal,
    NewType,
    final,
)
from ..waChatLockSettings.WAProtobufsChatLockSettings_pb2 import (
    ChatLockSettings,
)
from ..waCommon.WACommon_pb2 import (
    MessageKey,
)
from ..waDeviceCapabilities.WAProtobufsDeviceCapabilities_pb2 import (
    DeviceCapabilities,
)

DESCRIPTOR: FileDescriptor

@final
class CallLogRecord(Message):
    DESCRIPTOR: Descriptor

    class _CallType:
        ValueType = NewType("ValueType", int)
        V: typing_extensions.TypeAlias = ValueType

    class _CallTypeEnumTypeWrapper(_EnumTypeWrapper[CallLogRecord._CallType.ValueType], type):
        DESCRIPTOR: EnumDescriptor
        REGULAR: CallLogRecord._CallType.ValueType  # 0
        SCHEDULED_CALL: CallLogRecord._CallType.ValueType  # 1
        VOICE_CHAT: CallLogRecord._CallType.ValueType  # 2

    class CallType(_CallType, metaclass=_CallTypeEnumTypeWrapper): ...
    REGULAR: CallLogRecord.CallType.ValueType  # 0
    SCHEDULED_CALL: CallLogRecord.CallType.ValueType  # 1
    VOICE_CHAT: CallLogRecord.CallType.ValueType  # 2

    class _SilenceReason:
        ValueType = NewType("ValueType", int)
        V: typing_extensions.TypeAlias = ValueType

    class _SilenceReasonEnumTypeWrapper(_EnumTypeWrapper[CallLogRecord._SilenceReason.ValueType], type):
        DESCRIPTOR: EnumDescriptor
        NONE: CallLogRecord._SilenceReason.ValueType  # 0
        SCHEDULED: CallLogRecord._SilenceReason.ValueType  # 1
        PRIVACY: CallLogRecord._SilenceReason.ValueType  # 2
        LIGHTWEIGHT: CallLogRecord._SilenceReason.ValueType  # 3

    class SilenceReason(_SilenceReason, metaclass=_SilenceReasonEnumTypeWrapper): ...
    NONE: CallLogRecord.SilenceReason.ValueType  # 0
    SCHEDULED: CallLogRecord.SilenceReason.ValueType  # 1
    PRIVACY: CallLogRecord.SilenceReason.ValueType  # 2
    LIGHTWEIGHT: CallLogRecord.SilenceReason.ValueType  # 3

    class _CallResult:
        ValueType = NewType("ValueType", int)
        V: typing_extensions.TypeAlias = ValueType

    class _CallResultEnumTypeWrapper(_EnumTypeWrapper[CallLogRecord._CallResult.ValueType], type):
        DESCRIPTOR: EnumDescriptor
        CONNECTED: CallLogRecord._CallResult.ValueType  # 0
        REJECTED: CallLogRecord._CallResult.ValueType  # 1
        CANCELLED: CallLogRecord._CallResult.ValueType  # 2
        ACCEPTEDELSEWHERE: CallLogRecord._CallResult.ValueType  # 3
        MISSED: CallLogRecord._CallResult.ValueType  # 4
        INVALID: CallLogRecord._CallResult.ValueType  # 5
        UNAVAILABLE: CallLogRecord._CallResult.ValueType  # 6
        UPCOMING: CallLogRecord._CallResult.ValueType  # 7
        FAILED: CallLogRecord._CallResult.ValueType  # 8
        ABANDONED: CallLogRecord._CallResult.ValueType  # 9
        ONGOING: CallLogRecord._CallResult.ValueType  # 10

    class CallResult(_CallResult, metaclass=_CallResultEnumTypeWrapper): ...
    CONNECTED: CallLogRecord.CallResult.ValueType  # 0
    REJECTED: CallLogRecord.CallResult.ValueType  # 1
    CANCELLED: CallLogRecord.CallResult.ValueType  # 2
    ACCEPTEDELSEWHERE: CallLogRecord.CallResult.ValueType  # 3
    MISSED: CallLogRecord.CallResult.ValueType  # 4
    INVALID: CallLogRecord.CallResult.ValueType  # 5
    UNAVAILABLE: CallLogRecord.CallResult.ValueType  # 6
    UPCOMING: CallLogRecord.CallResult.ValueType  # 7
    FAILED: CallLogRecord.CallResult.ValueType  # 8
    ABANDONED: CallLogRecord.CallResult.ValueType  # 9
    ONGOING: CallLogRecord.CallResult.ValueType  # 10

    @final
    class ParticipantInfo(Message):
        DESCRIPTOR: Descriptor

        USERJID_FIELD_NUMBER: int
        CALLRESULT_FIELD_NUMBER: int
        userJID: str
        callResult: CallLogRecord.CallResult.ValueType
        def __init__(
            self,
            *,
            userJID: str | None = ...,
            callResult: CallLogRecord.CallResult.ValueType | None = ...,
        ) -> None: ...
        def HasField(self, field_name: Literal["callResult", b"callResult", "userJID", b"userJID"]) -> bool: ...
        def ClearField(self, field_name: Literal["callResult", b"callResult", "userJID", b"userJID"]) -> None: ...

    CALLRESULT_FIELD_NUMBER: int
    ISDNDMODE_FIELD_NUMBER: int
    SILENCEREASON_FIELD_NUMBER: int
    DURATION_FIELD_NUMBER: int
    STARTTIME_FIELD_NUMBER: int
    ISINCOMING_FIELD_NUMBER: int
    ISVIDEO_FIELD_NUMBER: int
    ISCALLLINK_FIELD_NUMBER: int
    CALLLINKTOKEN_FIELD_NUMBER: int
    SCHEDULEDCALLID_FIELD_NUMBER: int
    CALLID_FIELD_NUMBER: int
    CALLCREATORJID_FIELD_NUMBER: int
    GROUPJID_FIELD_NUMBER: int
    PARTICIPANTS_FIELD_NUMBER: int
    CALLTYPE_FIELD_NUMBER: int
    callResult: CallLogRecord.CallResult.ValueType
    isDndMode: bool
    silenceReason: CallLogRecord.SilenceReason.ValueType
    duration: int
    startTime: int
    isIncoming: bool
    isVideo: bool
    isCallLink: bool
    callLinkToken: str
    scheduledCallID: str
    callID: str
    callCreatorJID: str
    groupJID: str
    callType: CallLogRecord.CallType.ValueType
    @property
    def participants(self) -> RepeatedCompositeFieldContainer[CallLogRecord.ParticipantInfo]: ...
    def __init__(
        self,
        *,
        callResult: CallLogRecord.CallResult.ValueType | None = ...,
        isDndMode: bool | None = ...,
        silenceReason: CallLogRecord.SilenceReason.ValueType | None = ...,
        duration: int | None = ...,
        startTime: int | None = ...,
        isIncoming: bool | None = ...,
        isVideo: bool | None = ...,
        isCallLink: bool | None = ...,
        callLinkToken: str | None = ...,
        scheduledCallID: str | None = ...,
        callID: str | None = ...,
        callCreatorJID: str | None = ...,
        groupJID: str | None = ...,
        participants: Iterable[CallLogRecord.ParticipantInfo] | None = ...,
        callType: CallLogRecord.CallType.ValueType | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["callCreatorJID", b"callCreatorJID", "callID", b"callID", "callLinkToken", b"callLinkToken", "callResult", b"callResult", "callType", b"callType", "duration", b"duration", "groupJID", b"groupJID", "isCallLink", b"isCallLink", "isDndMode", b"isDndMode", "isIncoming", b"isIncoming", "isVideo", b"isVideo", "scheduledCallID", b"scheduledCallID", "silenceReason", b"silenceReason", "startTime", b"startTime"]) -> bool: ...
    def ClearField(self, field_name: Literal["callCreatorJID", b"callCreatorJID", "callID", b"callID", "callLinkToken", b"callLinkToken", "callResult", b"callResult", "callType", b"callType", "duration", b"duration", "groupJID", b"groupJID", "isCallLink", b"isCallLink", "isDndMode", b"isDndMode", "isIncoming", b"isIncoming", "isVideo", b"isVideo", "participants", b"participants", "scheduledCallID", b"scheduledCallID", "silenceReason", b"silenceReason", "startTime", b"startTime"]) -> None: ...

@final
class NotificationActivitySettingAction(Message):
    DESCRIPTOR: Descriptor

    class _NotificationActivitySetting:
        ValueType = NewType("ValueType", int)
        V: typing_extensions.TypeAlias = ValueType

    class _NotificationActivitySettingEnumTypeWrapper(_EnumTypeWrapper[NotificationActivitySettingAction._NotificationActivitySetting.ValueType], type):
        DESCRIPTOR: EnumDescriptor
        DEFAULT_ALL_MESSAGES: NotificationActivitySettingAction._NotificationActivitySetting.ValueType  # 0
        ALL_MESSAGES: NotificationActivitySettingAction._NotificationActivitySetting.ValueType  # 1
        HIGHLIGHTS: NotificationActivitySettingAction._NotificationActivitySetting.ValueType  # 2
        DEFAULT_HIGHLIGHTS: NotificationActivitySettingAction._NotificationActivitySetting.ValueType  # 3

    class NotificationActivitySetting(_NotificationActivitySetting, metaclass=_NotificationActivitySettingEnumTypeWrapper): ...
    DEFAULT_ALL_MESSAGES: NotificationActivitySettingAction.NotificationActivitySetting.ValueType  # 0
    ALL_MESSAGES: NotificationActivitySettingAction.NotificationActivitySetting.ValueType  # 1
    HIGHLIGHTS: NotificationActivitySettingAction.NotificationActivitySetting.ValueType  # 2
    DEFAULT_HIGHLIGHTS: NotificationActivitySettingAction.NotificationActivitySetting.ValueType  # 3

    NOTIFICATIONACTIVITYSETTING_FIELD_NUMBER: int
    notificationActivitySetting: NotificationActivitySettingAction.NotificationActivitySetting.ValueType
    def __init__(
        self,
        *,
        notificationActivitySetting: NotificationActivitySettingAction.NotificationActivitySetting.ValueType | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["notificationActivitySetting", b"notificationActivitySetting"]) -> bool: ...
    def ClearField(self, field_name: Literal["notificationActivitySetting", b"notificationActivitySetting"]) -> None: ...

@final
class WaffleAccountLinkStateAction(Message):
    DESCRIPTOR: Descriptor

    class _AccountLinkState:
        ValueType = NewType("ValueType", int)
        V: typing_extensions.TypeAlias = ValueType

    class _AccountLinkStateEnumTypeWrapper(_EnumTypeWrapper[WaffleAccountLinkStateAction._AccountLinkState.ValueType], type):
        DESCRIPTOR: EnumDescriptor
        ACTIVE: WaffleAccountLinkStateAction._AccountLinkState.ValueType  # 0

    class AccountLinkState(_AccountLinkState, metaclass=_AccountLinkStateEnumTypeWrapper): ...
    ACTIVE: WaffleAccountLinkStateAction.AccountLinkState.ValueType  # 0

    LINKSTATE_FIELD_NUMBER: int
    linkState: WaffleAccountLinkStateAction.AccountLinkState.ValueType
    def __init__(
        self,
        *,
        linkState: WaffleAccountLinkStateAction.AccountLinkState.ValueType | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["linkState", b"linkState"]) -> bool: ...
    def ClearField(self, field_name: Literal["linkState", b"linkState"]) -> None: ...

@final
class MerchantPaymentPartnerAction(Message):
    DESCRIPTOR: Descriptor

    class _Status:
        ValueType = NewType("ValueType", int)
        V: typing_extensions.TypeAlias = ValueType

    class _StatusEnumTypeWrapper(_EnumTypeWrapper[MerchantPaymentPartnerAction._Status.ValueType], type):
        DESCRIPTOR: EnumDescriptor
        ACTIVE: MerchantPaymentPartnerAction._Status.ValueType  # 0
        INACTIVE: MerchantPaymentPartnerAction._Status.ValueType  # 1

    class Status(_Status, metaclass=_StatusEnumTypeWrapper): ...
    ACTIVE: MerchantPaymentPartnerAction.Status.ValueType  # 0
    INACTIVE: MerchantPaymentPartnerAction.Status.ValueType  # 1

    STATUS_FIELD_NUMBER: int
    COUNTRY_FIELD_NUMBER: int
    GATEWAYNAME_FIELD_NUMBER: int
    CREDENTIALID_FIELD_NUMBER: int
    status: MerchantPaymentPartnerAction.Status.ValueType
    country: str
    gatewayName: str
    credentialID: str
    def __init__(
        self,
        *,
        status: MerchantPaymentPartnerAction.Status.ValueType | None = ...,
        country: str | None = ...,
        gatewayName: str | None = ...,
        credentialID: str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["country", b"country", "credentialID", b"credentialID", "gatewayName", b"gatewayName", "status", b"status"]) -> bool: ...
    def ClearField(self, field_name: Literal["country", b"country", "credentialID", b"credentialID", "gatewayName", b"gatewayName", "status", b"status"]) -> None: ...

@final
class NoteEditAction(Message):
    DESCRIPTOR: Descriptor

    class _NoteType:
        ValueType = NewType("ValueType", int)
        V: typing_extensions.TypeAlias = ValueType

    class _NoteTypeEnumTypeWrapper(_EnumTypeWrapper[NoteEditAction._NoteType.ValueType], type):
        DESCRIPTOR: EnumDescriptor
        UNSTRUCTURED: NoteEditAction._NoteType.ValueType  # 1
        STRUCTURED: NoteEditAction._NoteType.ValueType  # 2

    class NoteType(_NoteType, metaclass=_NoteTypeEnumTypeWrapper): ...
    UNSTRUCTURED: NoteEditAction.NoteType.ValueType  # 1
    STRUCTURED: NoteEditAction.NoteType.ValueType  # 2

    TYPE_FIELD_NUMBER: int
    CHATJID_FIELD_NUMBER: int
    CREATEDAT_FIELD_NUMBER: int
    DELETED_FIELD_NUMBER: int
    UNSTRUCTUREDCONTENT_FIELD_NUMBER: int
    type: NoteEditAction.NoteType.ValueType
    chatJID: str
    createdAt: int
    deleted: bool
    unstructuredContent: str
    def __init__(
        self,
        *,
        type: NoteEditAction.NoteType.ValueType | None = ...,
        chatJID: str | None = ...,
        createdAt: int | None = ...,
        deleted: bool | None = ...,
        unstructuredContent: str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["chatJID", b"chatJID", "createdAt", b"createdAt", "deleted", b"deleted", "type", b"type", "unstructuredContent", b"unstructuredContent"]) -> bool: ...
    def ClearField(self, field_name: Literal["chatJID", b"chatJID", "createdAt", b"createdAt", "deleted", b"deleted", "type", b"type", "unstructuredContent", b"unstructuredContent"]) -> None: ...

@final
class StatusPrivacyAction(Message):
    DESCRIPTOR: Descriptor

    class _StatusDistributionMode:
        ValueType = NewType("ValueType", int)
        V: typing_extensions.TypeAlias = ValueType

    class _StatusDistributionModeEnumTypeWrapper(_EnumTypeWrapper[StatusPrivacyAction._StatusDistributionMode.ValueType], type):
        DESCRIPTOR: EnumDescriptor
        ALLOW_LIST: StatusPrivacyAction._StatusDistributionMode.ValueType  # 0
        DENY_LIST: StatusPrivacyAction._StatusDistributionMode.ValueType  # 1
        CONTACTS: StatusPrivacyAction._StatusDistributionMode.ValueType  # 2

    class StatusDistributionMode(_StatusDistributionMode, metaclass=_StatusDistributionModeEnumTypeWrapper): ...
    ALLOW_LIST: StatusPrivacyAction.StatusDistributionMode.ValueType  # 0
    DENY_LIST: StatusPrivacyAction.StatusDistributionMode.ValueType  # 1
    CONTACTS: StatusPrivacyAction.StatusDistributionMode.ValueType  # 2

    MODE_FIELD_NUMBER: int
    USERJID_FIELD_NUMBER: int
    mode: StatusPrivacyAction.StatusDistributionMode.ValueType
    @property
    def userJID(self) -> RepeatedScalarFieldContainer[str]: ...
    def __init__(
        self,
        *,
        mode: StatusPrivacyAction.StatusDistributionMode.ValueType | None = ...,
        userJID: Iterable[str] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["mode", b"mode"]) -> bool: ...
    def ClearField(self, field_name: Literal["mode", b"mode", "userJID", b"userJID"]) -> None: ...

@final
class MarketingMessageAction(Message):
    DESCRIPTOR: Descriptor

    class _MarketingMessagePrototypeType:
        ValueType = NewType("ValueType", int)
        V: typing_extensions.TypeAlias = ValueType

    class _MarketingMessagePrototypeTypeEnumTypeWrapper(_EnumTypeWrapper[MarketingMessageAction._MarketingMessagePrototypeType.ValueType], type):
        DESCRIPTOR: EnumDescriptor
        PERSONALIZED: MarketingMessageAction._MarketingMessagePrototypeType.ValueType  # 0

    class MarketingMessagePrototypeType(_MarketingMessagePrototypeType, metaclass=_MarketingMessagePrototypeTypeEnumTypeWrapper): ...
    PERSONALIZED: MarketingMessageAction.MarketingMessagePrototypeType.ValueType  # 0

    NAME_FIELD_NUMBER: int
    MESSAGE_FIELD_NUMBER: int
    TYPE_FIELD_NUMBER: int
    CREATEDAT_FIELD_NUMBER: int
    LASTSENTAT_FIELD_NUMBER: int
    ISDELETED_FIELD_NUMBER: int
    MEDIAID_FIELD_NUMBER: int
    name: str
    message: str
    type: MarketingMessageAction.MarketingMessagePrototypeType.ValueType
    createdAt: int
    lastSentAt: int
    isDeleted: bool
    mediaID: str
    def __init__(
        self,
        *,
        name: str | None = ...,
        message: str | None = ...,
        type: MarketingMessageAction.MarketingMessagePrototypeType.ValueType | None = ...,
        createdAt: int | None = ...,
        lastSentAt: int | None = ...,
        isDeleted: bool | None = ...,
        mediaID: str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["createdAt", b"createdAt", "isDeleted", b"isDeleted", "lastSentAt", b"lastSentAt", "mediaID", b"mediaID", "message", b"message", "name", b"name", "type", b"type"]) -> bool: ...
    def ClearField(self, field_name: Literal["createdAt", b"createdAt", "isDeleted", b"isDeleted", "lastSentAt", b"lastSentAt", "mediaID", b"mediaID", "message", b"message", "name", b"name", "type", b"type"]) -> None: ...

@final
class UsernameChatStartModeAction(Message):
    DESCRIPTOR: Descriptor

    class _ChatStartMode:
        ValueType = NewType("ValueType", int)
        V: typing_extensions.TypeAlias = ValueType

    class _ChatStartModeEnumTypeWrapper(_EnumTypeWrapper[UsernameChatStartModeAction._ChatStartMode.ValueType], type):
        DESCRIPTOR: EnumDescriptor
        LID: UsernameChatStartModeAction._ChatStartMode.ValueType  # 1
        PN: UsernameChatStartModeAction._ChatStartMode.ValueType  # 2

    class ChatStartMode(_ChatStartMode, metaclass=_ChatStartModeEnumTypeWrapper): ...
    LID: UsernameChatStartModeAction.ChatStartMode.ValueType  # 1
    PN: UsernameChatStartModeAction.ChatStartMode.ValueType  # 2

    CHATSTARTMODE_FIELD_NUMBER: int
    chatStartMode: UsernameChatStartModeAction.ChatStartMode.ValueType
    def __init__(
        self,
        *,
        chatStartMode: UsernameChatStartModeAction.ChatStartMode.ValueType | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["chatStartMode", b"chatStartMode"]) -> bool: ...
    def ClearField(self, field_name: Literal["chatStartMode", b"chatStartMode"]) -> None: ...

@final
class LabelEditAction(Message):
    DESCRIPTOR: Descriptor

    class _ListType:
        ValueType = NewType("ValueType", int)
        V: typing_extensions.TypeAlias = ValueType

    class _ListTypeEnumTypeWrapper(_EnumTypeWrapper[LabelEditAction._ListType.ValueType], type):
        DESCRIPTOR: EnumDescriptor
        NONE: LabelEditAction._ListType.ValueType  # 0
        UNREAD: LabelEditAction._ListType.ValueType  # 1
        GROUPS: LabelEditAction._ListType.ValueType  # 2
        FAVORITES: LabelEditAction._ListType.ValueType  # 3
        PREDEFINED: LabelEditAction._ListType.ValueType  # 4
        CUSTOM: LabelEditAction._ListType.ValueType  # 5
        COMMUNITY: LabelEditAction._ListType.ValueType  # 6
        SERVER_ASSIGNED: LabelEditAction._ListType.ValueType  # 7

    class ListType(_ListType, metaclass=_ListTypeEnumTypeWrapper): ...
    NONE: LabelEditAction.ListType.ValueType  # 0
    UNREAD: LabelEditAction.ListType.ValueType  # 1
    GROUPS: LabelEditAction.ListType.ValueType  # 2
    FAVORITES: LabelEditAction.ListType.ValueType  # 3
    PREDEFINED: LabelEditAction.ListType.ValueType  # 4
    CUSTOM: LabelEditAction.ListType.ValueType  # 5
    COMMUNITY: LabelEditAction.ListType.ValueType  # 6
    SERVER_ASSIGNED: LabelEditAction.ListType.ValueType  # 7

    NAME_FIELD_NUMBER: int
    COLOR_FIELD_NUMBER: int
    PREDEFINEDID_FIELD_NUMBER: int
    DELETED_FIELD_NUMBER: int
    ORDERINDEX_FIELD_NUMBER: int
    ISACTIVE_FIELD_NUMBER: int
    TYPE_FIELD_NUMBER: int
    ISIMMUTABLE_FIELD_NUMBER: int
    name: str
    color: int
    predefinedID: int
    deleted: bool
    orderIndex: int
    isActive: bool
    type: LabelEditAction.ListType.ValueType
    isImmutable: bool
    def __init__(
        self,
        *,
        name: str | None = ...,
        color: int | None = ...,
        predefinedID: int | None = ...,
        deleted: bool | None = ...,
        orderIndex: int | None = ...,
        isActive: bool | None = ...,
        type: LabelEditAction.ListType.ValueType | None = ...,
        isImmutable: bool | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["color", b"color", "deleted", b"deleted", "isActive", b"isActive", "isImmutable", b"isImmutable", "name", b"name", "orderIndex", b"orderIndex", "predefinedID", b"predefinedID", "type", b"type"]) -> bool: ...
    def ClearField(self, field_name: Literal["color", b"color", "deleted", b"deleted", "isActive", b"isActive", "isImmutable", b"isImmutable", "name", b"name", "orderIndex", b"orderIndex", "predefinedID", b"predefinedID", "type", b"type"]) -> None: ...

@final
class PatchDebugData(Message):
    DESCRIPTOR: Descriptor

    class _Platform:
        ValueType = NewType("ValueType", int)
        V: typing_extensions.TypeAlias = ValueType

    class _PlatformEnumTypeWrapper(_EnumTypeWrapper[PatchDebugData._Platform.ValueType], type):
        DESCRIPTOR: EnumDescriptor
        ANDROID: PatchDebugData._Platform.ValueType  # 0
        SMBA: PatchDebugData._Platform.ValueType  # 1
        IPHONE: PatchDebugData._Platform.ValueType  # 2
        SMBI: PatchDebugData._Platform.ValueType  # 3
        WEB: PatchDebugData._Platform.ValueType  # 4
        UWP: PatchDebugData._Platform.ValueType  # 5
        DARWIN: PatchDebugData._Platform.ValueType  # 6
        IPAD: PatchDebugData._Platform.ValueType  # 7
        WEAROS: PatchDebugData._Platform.ValueType  # 8

    class Platform(_Platform, metaclass=_PlatformEnumTypeWrapper): ...
    ANDROID: PatchDebugData.Platform.ValueType  # 0
    SMBA: PatchDebugData.Platform.ValueType  # 1
    IPHONE: PatchDebugData.Platform.ValueType  # 2
    SMBI: PatchDebugData.Platform.ValueType  # 3
    WEB: PatchDebugData.Platform.ValueType  # 4
    UWP: PatchDebugData.Platform.ValueType  # 5
    DARWIN: PatchDebugData.Platform.ValueType  # 6
    IPAD: PatchDebugData.Platform.ValueType  # 7
    WEAROS: PatchDebugData.Platform.ValueType  # 8

    CURRENTLTHASH_FIELD_NUMBER: int
    NEWLTHASH_FIELD_NUMBER: int
    PATCHVERSION_FIELD_NUMBER: int
    COLLECTIONNAME_FIELD_NUMBER: int
    FIRSTFOURBYTESFROMAHASHOFSNAPSHOTMACKEY_FIELD_NUMBER: int
    NEWLTHASHSUBTRACT_FIELD_NUMBER: int
    NUMBERADD_FIELD_NUMBER: int
    NUMBERREMOVE_FIELD_NUMBER: int
    NUMBEROVERRIDE_FIELD_NUMBER: int
    SENDERPLATFORM_FIELD_NUMBER: int
    ISSENDERPRIMARY_FIELD_NUMBER: int
    currentLthash: bytes
    newLthash: bytes
    patchVersion: bytes
    collectionName: bytes
    firstFourBytesFromAHashOfSnapshotMACKey: bytes
    newLthashSubtract: bytes
    numberAdd: int
    numberRemove: int
    numberOverride: int
    senderPlatform: PatchDebugData.Platform.ValueType
    isSenderPrimary: bool
    def __init__(
        self,
        *,
        currentLthash: bytes | None = ...,
        newLthash: bytes | None = ...,
        patchVersion: bytes | None = ...,
        collectionName: bytes | None = ...,
        firstFourBytesFromAHashOfSnapshotMACKey: bytes | None = ...,
        newLthashSubtract: bytes | None = ...,
        numberAdd: int | None = ...,
        numberRemove: int | None = ...,
        numberOverride: int | None = ...,
        senderPlatform: PatchDebugData.Platform.ValueType | None = ...,
        isSenderPrimary: bool | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["collectionName", b"collectionName", "currentLthash", b"currentLthash", "firstFourBytesFromAHashOfSnapshotMACKey", b"firstFourBytesFromAHashOfSnapshotMACKey", "isSenderPrimary", b"isSenderPrimary", "newLthash", b"newLthash", "newLthashSubtract", b"newLthashSubtract", "numberAdd", b"numberAdd", "numberOverride", b"numberOverride", "numberRemove", b"numberRemove", "patchVersion", b"patchVersion", "senderPlatform", b"senderPlatform"]) -> bool: ...
    def ClearField(self, field_name: Literal["collectionName", b"collectionName", "currentLthash", b"currentLthash", "firstFourBytesFromAHashOfSnapshotMACKey", b"firstFourBytesFromAHashOfSnapshotMACKey", "isSenderPrimary", b"isSenderPrimary", "newLthash", b"newLthash", "newLthashSubtract", b"newLthashSubtract", "numberAdd", b"numberAdd", "numberOverride", b"numberOverride", "numberRemove", b"numberRemove", "patchVersion", b"patchVersion", "senderPlatform", b"senderPlatform"]) -> None: ...

@final
class RecentEmojiWeight(Message):
    DESCRIPTOR: Descriptor

    EMOJI_FIELD_NUMBER: int
    WEIGHT_FIELD_NUMBER: int
    emoji: str
    weight: float
    def __init__(
        self,
        *,
        emoji: str | None = ...,
        weight: float | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["emoji", b"emoji", "weight", b"weight"]) -> bool: ...
    def ClearField(self, field_name: Literal["emoji", b"emoji", "weight", b"weight"]) -> None: ...

@final
class SyncActionValue(Message):
    DESCRIPTOR: Descriptor

    TIMESTAMP_FIELD_NUMBER: int
    STARACTION_FIELD_NUMBER: int
    CONTACTACTION_FIELD_NUMBER: int
    MUTEACTION_FIELD_NUMBER: int
    PINACTION_FIELD_NUMBER: int
    SECURITYNOTIFICATIONSETTING_FIELD_NUMBER: int
    PUSHNAMESETTING_FIELD_NUMBER: int
    QUICKREPLYACTION_FIELD_NUMBER: int
    RECENTEMOJIWEIGHTSACTION_FIELD_NUMBER: int
    LABELEDITACTION_FIELD_NUMBER: int
    LABELASSOCIATIONACTION_FIELD_NUMBER: int
    LOCALESETTING_FIELD_NUMBER: int
    ARCHIVECHATACTION_FIELD_NUMBER: int
    DELETEMESSAGEFORMEACTION_FIELD_NUMBER: int
    KEYEXPIRATION_FIELD_NUMBER: int
    MARKCHATASREADACTION_FIELD_NUMBER: int
    CLEARCHATACTION_FIELD_NUMBER: int
    DELETECHATACTION_FIELD_NUMBER: int
    UNARCHIVECHATSSETTING_FIELD_NUMBER: int
    PRIMARYFEATURE_FIELD_NUMBER: int
    ANDROIDUNSUPPORTEDACTIONS_FIELD_NUMBER: int
    AGENTACTION_FIELD_NUMBER: int
    SUBSCRIPTIONACTION_FIELD_NUMBER: int
    USERSTATUSMUTEACTION_FIELD_NUMBER: int
    TIMEFORMATACTION_FIELD_NUMBER: int
    NUXACTION_FIELD_NUMBER: int
    PRIMARYVERSIONACTION_FIELD_NUMBER: int
    STICKERACTION_FIELD_NUMBER: int
    REMOVERECENTSTICKERACTION_FIELD_NUMBER: int
    CHATASSIGNMENT_FIELD_NUMBER: int
    CHATASSIGNMENTOPENEDSTATUS_FIELD_NUMBER: int
    PNFORLIDCHATACTION_FIELD_NUMBER: int
    MARKETINGMESSAGEACTION_FIELD_NUMBER: int
    MARKETINGMESSAGEBROADCASTACTION_FIELD_NUMBER: int
    EXTERNALWEBBETAACTION_FIELD_NUMBER: int
    PRIVACYSETTINGRELAYALLCALLS_FIELD_NUMBER: int
    CALLLOGACTION_FIELD_NUMBER: int
    STATUSPRIVACY_FIELD_NUMBER: int
    BOTWELCOMEREQUESTACTION_FIELD_NUMBER: int
    DELETEINDIVIDUALCALLLOG_FIELD_NUMBER: int
    LABELREORDERINGACTION_FIELD_NUMBER: int
    PAYMENTINFOACTION_FIELD_NUMBER: int
    CUSTOMPAYMENTMETHODSACTION_FIELD_NUMBER: int
    LOCKCHATACTION_FIELD_NUMBER: int
    CHATLOCKSETTINGS_FIELD_NUMBER: int
    WAMOUSERIDENTIFIERACTION_FIELD_NUMBER: int
    PRIVACYSETTINGDISABLELINKPREVIEWSACTION_FIELD_NUMBER: int
    DEVICECAPABILITIES_FIELD_NUMBER: int
    NOTEEDITACTION_FIELD_NUMBER: int
    FAVORITESACTION_FIELD_NUMBER: int
    MERCHANTPAYMENTPARTNERACTION_FIELD_NUMBER: int
    WAFFLEACCOUNTLINKSTATEACTION_FIELD_NUMBER: int
    USERNAMECHATSTARTMODE_FIELD_NUMBER: int
    NOTIFICATIONACTIVITYSETTINGACTION_FIELD_NUMBER: int
    LIDCONTACTACTION_FIELD_NUMBER: int
    CTWAPERCUSTOMERDATASHARINGACTION_FIELD_NUMBER: int
    timestamp: int
    @property
    def starAction(self) -> StarAction: ...
    @property
    def contactAction(self) -> ContactAction: ...
    @property
    def muteAction(self) -> MuteAction: ...
    @property
    def pinAction(self) -> PinAction: ...
    @property
    def securityNotificationSetting(self) -> SecurityNotificationSetting: ...
    @property
    def pushNameSetting(self) -> PushNameSetting: ...
    @property
    def quickReplyAction(self) -> QuickReplyAction: ...
    @property
    def recentEmojiWeightsAction(self) -> RecentEmojiWeightsAction: ...
    @property
    def labelEditAction(self) -> LabelEditAction: ...
    @property
    def labelAssociationAction(self) -> LabelAssociationAction: ...
    @property
    def localeSetting(self) -> LocaleSetting: ...
    @property
    def archiveChatAction(self) -> ArchiveChatAction: ...
    @property
    def deleteMessageForMeAction(self) -> DeleteMessageForMeAction: ...
    @property
    def keyExpiration(self) -> KeyExpiration: ...
    @property
    def markChatAsReadAction(self) -> MarkChatAsReadAction: ...
    @property
    def clearChatAction(self) -> ClearChatAction: ...
    @property
    def deleteChatAction(self) -> DeleteChatAction: ...
    @property
    def unarchiveChatsSetting(self) -> UnarchiveChatsSetting: ...
    @property
    def primaryFeature(self) -> PrimaryFeature: ...
    @property
    def androidUnsupportedActions(self) -> AndroidUnsupportedActions: ...
    @property
    def agentAction(self) -> AgentAction: ...
    @property
    def subscriptionAction(self) -> SubscriptionAction: ...
    @property
    def userStatusMuteAction(self) -> UserStatusMuteAction: ...
    @property
    def timeFormatAction(self) -> TimeFormatAction: ...
    @property
    def nuxAction(self) -> NuxAction: ...
    @property
    def primaryVersionAction(self) -> PrimaryVersionAction: ...
    @property
    def stickerAction(self) -> StickerAction: ...
    @property
    def removeRecentStickerAction(self) -> RemoveRecentStickerAction: ...
    @property
    def chatAssignment(self) -> ChatAssignmentAction: ...
    @property
    def chatAssignmentOpenedStatus(self) -> ChatAssignmentOpenedStatusAction: ...
    @property
    def pnForLidChatAction(self) -> PnForLidChatAction: ...
    @property
    def marketingMessageAction(self) -> MarketingMessageAction: ...
    @property
    def marketingMessageBroadcastAction(self) -> MarketingMessageBroadcastAction: ...
    @property
    def externalWebBetaAction(self) -> ExternalWebBetaAction: ...
    @property
    def privacySettingRelayAllCalls(self) -> PrivacySettingRelayAllCalls: ...
    @property
    def callLogAction(self) -> CallLogAction: ...
    @property
    def statusPrivacy(self) -> StatusPrivacyAction: ...
    @property
    def botWelcomeRequestAction(self) -> BotWelcomeRequestAction: ...
    @property
    def deleteIndividualCallLog(self) -> DeleteIndividualCallLogAction: ...
    @property
    def labelReorderingAction(self) -> LabelReorderingAction: ...
    @property
    def paymentInfoAction(self) -> PaymentInfoAction: ...
    @property
    def customPaymentMethodsAction(self) -> CustomPaymentMethodsAction: ...
    @property
    def lockChatAction(self) -> LockChatAction: ...
    @property
    def chatLockSettings(self) -> ChatLockSettings: ...
    @property
    def wamoUserIdentifierAction(self) -> WamoUserIdentifierAction: ...
    @property
    def privacySettingDisableLinkPreviewsAction(self) -> PrivacySettingDisableLinkPreviewsAction: ...
    @property
    def deviceCapabilities(self) -> DeviceCapabilities: ...
    @property
    def noteEditAction(self) -> NoteEditAction: ...
    @property
    def favoritesAction(self) -> FavoritesAction: ...
    @property
    def merchantPaymentPartnerAction(self) -> MerchantPaymentPartnerAction: ...
    @property
    def waffleAccountLinkStateAction(self) -> WaffleAccountLinkStateAction: ...
    @property
    def usernameChatStartMode(self) -> UsernameChatStartModeAction: ...
    @property
    def notificationActivitySettingAction(self) -> NotificationActivitySettingAction: ...
    @property
    def lidContactAction(self) -> LidContactAction: ...
    @property
    def ctwaPerCustomerDataSharingAction(self) -> CtwaPerCustomerDataSharingAction: ...
    def __init__(
        self,
        *,
        timestamp: int | None = ...,
        starAction: StarAction | None = ...,
        contactAction: ContactAction | None = ...,
        muteAction: MuteAction | None = ...,
        pinAction: PinAction | None = ...,
        securityNotificationSetting: SecurityNotificationSetting | None = ...,
        pushNameSetting: PushNameSetting | None = ...,
        quickReplyAction: QuickReplyAction | None = ...,
        recentEmojiWeightsAction: RecentEmojiWeightsAction | None = ...,
        labelEditAction: LabelEditAction | None = ...,
        labelAssociationAction: LabelAssociationAction | None = ...,
        localeSetting: LocaleSetting | None = ...,
        archiveChatAction: ArchiveChatAction | None = ...,
        deleteMessageForMeAction: DeleteMessageForMeAction | None = ...,
        keyExpiration: KeyExpiration | None = ...,
        markChatAsReadAction: MarkChatAsReadAction | None = ...,
        clearChatAction: ClearChatAction | None = ...,
        deleteChatAction: DeleteChatAction | None = ...,
        unarchiveChatsSetting: UnarchiveChatsSetting | None = ...,
        primaryFeature: PrimaryFeature | None = ...,
        androidUnsupportedActions: AndroidUnsupportedActions | None = ...,
        agentAction: AgentAction | None = ...,
        subscriptionAction: SubscriptionAction | None = ...,
        userStatusMuteAction: UserStatusMuteAction | None = ...,
        timeFormatAction: TimeFormatAction | None = ...,
        nuxAction: NuxAction | None = ...,
        primaryVersionAction: PrimaryVersionAction | None = ...,
        stickerAction: StickerAction | None = ...,
        removeRecentStickerAction: RemoveRecentStickerAction | None = ...,
        chatAssignment: ChatAssignmentAction | None = ...,
        chatAssignmentOpenedStatus: ChatAssignmentOpenedStatusAction | None = ...,
        pnForLidChatAction: PnForLidChatAction | None = ...,
        marketingMessageAction: MarketingMessageAction | None = ...,
        marketingMessageBroadcastAction: MarketingMessageBroadcastAction | None = ...,
        externalWebBetaAction: ExternalWebBetaAction | None = ...,
        privacySettingRelayAllCalls: PrivacySettingRelayAllCalls | None = ...,
        callLogAction: CallLogAction | None = ...,
        statusPrivacy: StatusPrivacyAction | None = ...,
        botWelcomeRequestAction: BotWelcomeRequestAction | None = ...,
        deleteIndividualCallLog: DeleteIndividualCallLogAction | None = ...,
        labelReorderingAction: LabelReorderingAction | None = ...,
        paymentInfoAction: PaymentInfoAction | None = ...,
        customPaymentMethodsAction: CustomPaymentMethodsAction | None = ...,
        lockChatAction: LockChatAction | None = ...,
        chatLockSettings: ChatLockSettings | None = ...,
        wamoUserIdentifierAction: WamoUserIdentifierAction | None = ...,
        privacySettingDisableLinkPreviewsAction: PrivacySettingDisableLinkPreviewsAction | None = ...,
        deviceCapabilities: DeviceCapabilities | None = ...,
        noteEditAction: NoteEditAction | None = ...,
        favoritesAction: FavoritesAction | None = ...,
        merchantPaymentPartnerAction: MerchantPaymentPartnerAction | None = ...,
        waffleAccountLinkStateAction: WaffleAccountLinkStateAction | None = ...,
        usernameChatStartMode: UsernameChatStartModeAction | None = ...,
        notificationActivitySettingAction: NotificationActivitySettingAction | None = ...,
        lidContactAction: LidContactAction | None = ...,
        ctwaPerCustomerDataSharingAction: CtwaPerCustomerDataSharingAction | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["agentAction", b"agentAction", "androidUnsupportedActions", b"androidUnsupportedActions", "archiveChatAction", b"archiveChatAction", "botWelcomeRequestAction", b"botWelcomeRequestAction", "callLogAction", b"callLogAction", "chatAssignment", b"chatAssignment", "chatAssignmentOpenedStatus", b"chatAssignmentOpenedStatus", "chatLockSettings", b"chatLockSettings", "clearChatAction", b"clearChatAction", "contactAction", b"contactAction", "ctwaPerCustomerDataSharingAction", b"ctwaPerCustomerDataSharingAction", "customPaymentMethodsAction", b"customPaymentMethodsAction", "deleteChatAction", b"deleteChatAction", "deleteIndividualCallLog", b"deleteIndividualCallLog", "deleteMessageForMeAction", b"deleteMessageForMeAction", "deviceCapabilities", b"deviceCapabilities", "externalWebBetaAction", b"externalWebBetaAction", "favoritesAction", b"favoritesAction", "keyExpiration", b"keyExpiration", "labelAssociationAction", b"labelAssociationAction", "labelEditAction", b"labelEditAction", "labelReorderingAction", b"labelReorderingAction", "lidContactAction", b"lidContactAction", "localeSetting", b"localeSetting", "lockChatAction", b"lockChatAction", "markChatAsReadAction", b"markChatAsReadAction", "marketingMessageAction", b"marketingMessageAction", "marketingMessageBroadcastAction", b"marketingMessageBroadcastAction", "merchantPaymentPartnerAction", b"merchantPaymentPartnerAction", "muteAction", b"muteAction", "noteEditAction", b"noteEditAction", "notificationActivitySettingAction", b"notificationActivitySettingAction", "nuxAction", b"nuxAction", "paymentInfoAction", b"paymentInfoAction", "pinAction", b"pinAction", "pnForLidChatAction", b"pnForLidChatAction", "primaryFeature", b"primaryFeature", "primaryVersionAction", b"primaryVersionAction", "privacySettingDisableLinkPreviewsAction", b"privacySettingDisableLinkPreviewsAction", "privacySettingRelayAllCalls", b"privacySettingRelayAllCalls", "pushNameSetting", b"pushNameSetting", "quickReplyAction", b"quickReplyAction", "recentEmojiWeightsAction", b"recentEmojiWeightsAction", "removeRecentStickerAction", b"removeRecentStickerAction", "securityNotificationSetting", b"securityNotificationSetting", "starAction", b"starAction", "statusPrivacy", b"statusPrivacy", "stickerAction", b"stickerAction", "subscriptionAction", b"subscriptionAction", "timeFormatAction", b"timeFormatAction", "timestamp", b"timestamp", "unarchiveChatsSetting", b"unarchiveChatsSetting", "userStatusMuteAction", b"userStatusMuteAction", "usernameChatStartMode", b"usernameChatStartMode", "waffleAccountLinkStateAction", b"waffleAccountLinkStateAction", "wamoUserIdentifierAction", b"wamoUserIdentifierAction"]) -> bool: ...
    def ClearField(self, field_name: Literal["agentAction", b"agentAction", "androidUnsupportedActions", b"androidUnsupportedActions", "archiveChatAction", b"archiveChatAction", "botWelcomeRequestAction", b"botWelcomeRequestAction", "callLogAction", b"callLogAction", "chatAssignment", b"chatAssignment", "chatAssignmentOpenedStatus", b"chatAssignmentOpenedStatus", "chatLockSettings", b"chatLockSettings", "clearChatAction", b"clearChatAction", "contactAction", b"contactAction", "ctwaPerCustomerDataSharingAction", b"ctwaPerCustomerDataSharingAction", "customPaymentMethodsAction", b"customPaymentMethodsAction", "deleteChatAction", b"deleteChatAction", "deleteIndividualCallLog", b"deleteIndividualCallLog", "deleteMessageForMeAction", b"deleteMessageForMeAction", "deviceCapabilities", b"deviceCapabilities", "externalWebBetaAction", b"externalWebBetaAction", "favoritesAction", b"favoritesAction", "keyExpiration", b"keyExpiration", "labelAssociationAction", b"labelAssociationAction", "labelEditAction", b"labelEditAction", "labelReorderingAction", b"labelReorderingAction", "lidContactAction", b"lidContactAction", "localeSetting", b"localeSetting", "lockChatAction", b"lockChatAction", "markChatAsReadAction", b"markChatAsReadAction", "marketingMessageAction", b"marketingMessageAction", "marketingMessageBroadcastAction", b"marketingMessageBroadcastAction", "merchantPaymentPartnerAction", b"merchantPaymentPartnerAction", "muteAction", b"muteAction", "noteEditAction", b"noteEditAction", "notificationActivitySettingAction", b"notificationActivitySettingAction", "nuxAction", b"nuxAction", "paymentInfoAction", b"paymentInfoAction", "pinAction", b"pinAction", "pnForLidChatAction", b"pnForLidChatAction", "primaryFeature", b"primaryFeature", "primaryVersionAction", b"primaryVersionAction", "privacySettingDisableLinkPreviewsAction", b"privacySettingDisableLinkPreviewsAction", "privacySettingRelayAllCalls", b"privacySettingRelayAllCalls", "pushNameSetting", b"pushNameSetting", "quickReplyAction", b"quickReplyAction", "recentEmojiWeightsAction", b"recentEmojiWeightsAction", "removeRecentStickerAction", b"removeRecentStickerAction", "securityNotificationSetting", b"securityNotificationSetting", "starAction", b"starAction", "statusPrivacy", b"statusPrivacy", "stickerAction", b"stickerAction", "subscriptionAction", b"subscriptionAction", "timeFormatAction", b"timeFormatAction", "timestamp", b"timestamp", "unarchiveChatsSetting", b"unarchiveChatsSetting", "userStatusMuteAction", b"userStatusMuteAction", "usernameChatStartMode", b"usernameChatStartMode", "waffleAccountLinkStateAction", b"waffleAccountLinkStateAction", "wamoUserIdentifierAction", b"wamoUserIdentifierAction"]) -> None: ...

@final
class CtwaPerCustomerDataSharingAction(Message):
    DESCRIPTOR: Descriptor

    ISCTWAPERCUSTOMERDATASHARINGENABLED_FIELD_NUMBER: int
    isCtwaPerCustomerDataSharingEnabled: bool
    def __init__(
        self,
        *,
        isCtwaPerCustomerDataSharingEnabled: bool | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["isCtwaPerCustomerDataSharingEnabled", b"isCtwaPerCustomerDataSharingEnabled"]) -> bool: ...
    def ClearField(self, field_name: Literal["isCtwaPerCustomerDataSharingEnabled", b"isCtwaPerCustomerDataSharingEnabled"]) -> None: ...

@final
class LidContactAction(Message):
    DESCRIPTOR: Descriptor

    FULLNAME_FIELD_NUMBER: int
    FIRSTNAME_FIELD_NUMBER: int
    USERNAME_FIELD_NUMBER: int
    SAVEONPRIMARYADDRESSBOOK_FIELD_NUMBER: int
    fullName: str
    firstName: str
    username: str
    saveOnPrimaryAddressbook: bool
    def __init__(
        self,
        *,
        fullName: str | None = ...,
        firstName: str | None = ...,
        username: str | None = ...,
        saveOnPrimaryAddressbook: bool | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["firstName", b"firstName", "fullName", b"fullName", "saveOnPrimaryAddressbook", b"saveOnPrimaryAddressbook", "username", b"username"]) -> bool: ...
    def ClearField(self, field_name: Literal["firstName", b"firstName", "fullName", b"fullName", "saveOnPrimaryAddressbook", b"saveOnPrimaryAddressbook", "username", b"username"]) -> None: ...

@final
class FavoritesAction(Message):
    DESCRIPTOR: Descriptor

    @final
    class Favorite(Message):
        DESCRIPTOR: Descriptor

        ID_FIELD_NUMBER: int
        ID: str
        def __init__(
            self,
            *,
            ID: str | None = ...,
        ) -> None: ...
        def HasField(self, field_name: Literal["ID", b"ID"]) -> bool: ...
        def ClearField(self, field_name: Literal["ID", b"ID"]) -> None: ...

    FAVORITES_FIELD_NUMBER: int
    @property
    def favorites(self) -> RepeatedCompositeFieldContainer[FavoritesAction.Favorite]: ...
    def __init__(
        self,
        *,
        favorites: Iterable[FavoritesAction.Favorite] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: Literal["favorites", b"favorites"]) -> None: ...

@final
class PrivacySettingDisableLinkPreviewsAction(Message):
    DESCRIPTOR: Descriptor

    ISPREVIEWSDISABLED_FIELD_NUMBER: int
    isPreviewsDisabled: bool
    def __init__(
        self,
        *,
        isPreviewsDisabled: bool | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["isPreviewsDisabled", b"isPreviewsDisabled"]) -> bool: ...
    def ClearField(self, field_name: Literal["isPreviewsDisabled", b"isPreviewsDisabled"]) -> None: ...

@final
class WamoUserIdentifierAction(Message):
    DESCRIPTOR: Descriptor

    IDENTIFIER_FIELD_NUMBER: int
    identifier: str
    def __init__(
        self,
        *,
        identifier: str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["identifier", b"identifier"]) -> bool: ...
    def ClearField(self, field_name: Literal["identifier", b"identifier"]) -> None: ...

@final
class LockChatAction(Message):
    DESCRIPTOR: Descriptor

    LOCKED_FIELD_NUMBER: int
    locked: bool
    def __init__(
        self,
        *,
        locked: bool | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["locked", b"locked"]) -> bool: ...
    def ClearField(self, field_name: Literal["locked", b"locked"]) -> None: ...

@final
class CustomPaymentMethodsAction(Message):
    DESCRIPTOR: Descriptor

    CUSTOMPAYMENTMETHODS_FIELD_NUMBER: int
    @property
    def customPaymentMethods(self) -> RepeatedCompositeFieldContainer[CustomPaymentMethod]: ...
    def __init__(
        self,
        *,
        customPaymentMethods: Iterable[CustomPaymentMethod] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: Literal["customPaymentMethods", b"customPaymentMethods"]) -> None: ...

@final
class CustomPaymentMethod(Message):
    DESCRIPTOR: Descriptor

    CREDENTIALID_FIELD_NUMBER: int
    COUNTRY_FIELD_NUMBER: int
    TYPE_FIELD_NUMBER: int
    METADATA_FIELD_NUMBER: int
    credentialID: str
    country: str
    type: str
    @property
    def metadata(self) -> RepeatedCompositeFieldContainer[CustomPaymentMethodMetadata]: ...
    def __init__(
        self,
        *,
        credentialID: str | None = ...,
        country: str | None = ...,
        type: str | None = ...,
        metadata: Iterable[CustomPaymentMethodMetadata] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["country", b"country", "credentialID", b"credentialID", "type", b"type"]) -> bool: ...
    def ClearField(self, field_name: Literal["country", b"country", "credentialID", b"credentialID", "metadata", b"metadata", "type", b"type"]) -> None: ...

@final
class CustomPaymentMethodMetadata(Message):
    DESCRIPTOR: Descriptor

    KEY_FIELD_NUMBER: int
    VALUE_FIELD_NUMBER: int
    key: str
    value: str
    def __init__(
        self,
        *,
        key: str | None = ...,
        value: str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["key", b"key", "value", b"value"]) -> bool: ...
    def ClearField(self, field_name: Literal["key", b"key", "value", b"value"]) -> None: ...

@final
class PaymentInfoAction(Message):
    DESCRIPTOR: Descriptor

    CPI_FIELD_NUMBER: int
    cpi: str
    def __init__(
        self,
        *,
        cpi: str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["cpi", b"cpi"]) -> bool: ...
    def ClearField(self, field_name: Literal["cpi", b"cpi"]) -> None: ...

@final
class LabelReorderingAction(Message):
    DESCRIPTOR: Descriptor

    SORTEDLABELIDS_FIELD_NUMBER: int
    @property
    def sortedLabelIDs(self) -> RepeatedScalarFieldContainer[int]: ...
    def __init__(
        self,
        *,
        sortedLabelIDs: Iterable[int] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: Literal["sortedLabelIDs", b"sortedLabelIDs"]) -> None: ...

@final
class DeleteIndividualCallLogAction(Message):
    DESCRIPTOR: Descriptor

    PEERJID_FIELD_NUMBER: int
    ISINCOMING_FIELD_NUMBER: int
    peerJID: str
    isIncoming: bool
    def __init__(
        self,
        *,
        peerJID: str | None = ...,
        isIncoming: bool | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["isIncoming", b"isIncoming", "peerJID", b"peerJID"]) -> bool: ...
    def ClearField(self, field_name: Literal["isIncoming", b"isIncoming", "peerJID", b"peerJID"]) -> None: ...

@final
class BotWelcomeRequestAction(Message):
    DESCRIPTOR: Descriptor

    ISSENT_FIELD_NUMBER: int
    isSent: bool
    def __init__(
        self,
        *,
        isSent: bool | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["isSent", b"isSent"]) -> bool: ...
    def ClearField(self, field_name: Literal["isSent", b"isSent"]) -> None: ...

@final
class CallLogAction(Message):
    DESCRIPTOR: Descriptor

    CALLLOGRECORD_FIELD_NUMBER: int
    @property
    def callLogRecord(self) -> CallLogRecord: ...
    def __init__(
        self,
        *,
        callLogRecord: CallLogRecord | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["callLogRecord", b"callLogRecord"]) -> bool: ...
    def ClearField(self, field_name: Literal["callLogRecord", b"callLogRecord"]) -> None: ...

@final
class PrivacySettingRelayAllCalls(Message):
    DESCRIPTOR: Descriptor

    ISENABLED_FIELD_NUMBER: int
    isEnabled: bool
    def __init__(
        self,
        *,
        isEnabled: bool | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["isEnabled", b"isEnabled"]) -> bool: ...
    def ClearField(self, field_name: Literal["isEnabled", b"isEnabled"]) -> None: ...

@final
class ExternalWebBetaAction(Message):
    DESCRIPTOR: Descriptor

    ISOPTIN_FIELD_NUMBER: int
    isOptIn: bool
    def __init__(
        self,
        *,
        isOptIn: bool | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["isOptIn", b"isOptIn"]) -> bool: ...
    def ClearField(self, field_name: Literal["isOptIn", b"isOptIn"]) -> None: ...

@final
class MarketingMessageBroadcastAction(Message):
    DESCRIPTOR: Descriptor

    REPLIEDCOUNT_FIELD_NUMBER: int
    repliedCount: int
    def __init__(
        self,
        *,
        repliedCount: int | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["repliedCount", b"repliedCount"]) -> bool: ...
    def ClearField(self, field_name: Literal["repliedCount", b"repliedCount"]) -> None: ...

@final
class PnForLidChatAction(Message):
    DESCRIPTOR: Descriptor

    PNJID_FIELD_NUMBER: int
    pnJID: str
    def __init__(
        self,
        *,
        pnJID: str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["pnJID", b"pnJID"]) -> bool: ...
    def ClearField(self, field_name: Literal["pnJID", b"pnJID"]) -> None: ...

@final
class ChatAssignmentOpenedStatusAction(Message):
    DESCRIPTOR: Descriptor

    CHATOPENED_FIELD_NUMBER: int
    chatOpened: bool
    def __init__(
        self,
        *,
        chatOpened: bool | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["chatOpened", b"chatOpened"]) -> bool: ...
    def ClearField(self, field_name: Literal["chatOpened", b"chatOpened"]) -> None: ...

@final
class ChatAssignmentAction(Message):
    DESCRIPTOR: Descriptor

    DEVICEAGENTID_FIELD_NUMBER: int
    deviceAgentID: str
    def __init__(
        self,
        *,
        deviceAgentID: str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["deviceAgentID", b"deviceAgentID"]) -> bool: ...
    def ClearField(self, field_name: Literal["deviceAgentID", b"deviceAgentID"]) -> None: ...

@final
class StickerAction(Message):
    DESCRIPTOR: Descriptor

    URL_FIELD_NUMBER: int
    FILEENCSHA256_FIELD_NUMBER: int
    MEDIAKEY_FIELD_NUMBER: int
    MIMETYPE_FIELD_NUMBER: int
    HEIGHT_FIELD_NUMBER: int
    WIDTH_FIELD_NUMBER: int
    DIRECTPATH_FIELD_NUMBER: int
    FILELENGTH_FIELD_NUMBER: int
    ISFAVORITE_FIELD_NUMBER: int
    DEVICEIDHINT_FIELD_NUMBER: int
    ISLOTTIE_FIELD_NUMBER: int
    URL: str
    fileEncSHA256: bytes
    mediaKey: bytes
    mimetype: str
    height: int
    width: int
    directPath: str
    fileLength: int
    isFavorite: bool
    deviceIDHint: int
    isLottie: bool
    def __init__(
        self,
        *,
        URL: str | None = ...,
        fileEncSHA256: bytes | None = ...,
        mediaKey: bytes | None = ...,
        mimetype: str | None = ...,
        height: int | None = ...,
        width: int | None = ...,
        directPath: str | None = ...,
        fileLength: int | None = ...,
        isFavorite: bool | None = ...,
        deviceIDHint: int | None = ...,
        isLottie: bool | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["URL", b"URL", "deviceIDHint", b"deviceIDHint", "directPath", b"directPath", "fileEncSHA256", b"fileEncSHA256", "fileLength", b"fileLength", "height", b"height", "isFavorite", b"isFavorite", "isLottie", b"isLottie", "mediaKey", b"mediaKey", "mimetype", b"mimetype", "width", b"width"]) -> bool: ...
    def ClearField(self, field_name: Literal["URL", b"URL", "deviceIDHint", b"deviceIDHint", "directPath", b"directPath", "fileEncSHA256", b"fileEncSHA256", "fileLength", b"fileLength", "height", b"height", "isFavorite", b"isFavorite", "isLottie", b"isLottie", "mediaKey", b"mediaKey", "mimetype", b"mimetype", "width", b"width"]) -> None: ...

@final
class RemoveRecentStickerAction(Message):
    DESCRIPTOR: Descriptor

    LASTSTICKERSENTTS_FIELD_NUMBER: int
    lastStickerSentTS: int
    def __init__(
        self,
        *,
        lastStickerSentTS: int | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["lastStickerSentTS", b"lastStickerSentTS"]) -> bool: ...
    def ClearField(self, field_name: Literal["lastStickerSentTS", b"lastStickerSentTS"]) -> None: ...

@final
class PrimaryVersionAction(Message):
    DESCRIPTOR: Descriptor

    VERSION_FIELD_NUMBER: int
    version: str
    def __init__(
        self,
        *,
        version: str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["version", b"version"]) -> bool: ...
    def ClearField(self, field_name: Literal["version", b"version"]) -> None: ...

@final
class NuxAction(Message):
    DESCRIPTOR: Descriptor

    ACKNOWLEDGED_FIELD_NUMBER: int
    acknowledged: bool
    def __init__(
        self,
        *,
        acknowledged: bool | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["acknowledged", b"acknowledged"]) -> bool: ...
    def ClearField(self, field_name: Literal["acknowledged", b"acknowledged"]) -> None: ...

@final
class TimeFormatAction(Message):
    DESCRIPTOR: Descriptor

    ISTWENTYFOURHOURFORMATENABLED_FIELD_NUMBER: int
    isTwentyFourHourFormatEnabled: bool
    def __init__(
        self,
        *,
        isTwentyFourHourFormatEnabled: bool | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["isTwentyFourHourFormatEnabled", b"isTwentyFourHourFormatEnabled"]) -> bool: ...
    def ClearField(self, field_name: Literal["isTwentyFourHourFormatEnabled", b"isTwentyFourHourFormatEnabled"]) -> None: ...

@final
class UserStatusMuteAction(Message):
    DESCRIPTOR: Descriptor

    MUTED_FIELD_NUMBER: int
    muted: bool
    def __init__(
        self,
        *,
        muted: bool | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["muted", b"muted"]) -> bool: ...
    def ClearField(self, field_name: Literal["muted", b"muted"]) -> None: ...

@final
class SubscriptionAction(Message):
    DESCRIPTOR: Descriptor

    ISDEACTIVATED_FIELD_NUMBER: int
    ISAUTORENEWING_FIELD_NUMBER: int
    EXPIRATIONDATE_FIELD_NUMBER: int
    isDeactivated: bool
    isAutoRenewing: bool
    expirationDate: int
    def __init__(
        self,
        *,
        isDeactivated: bool | None = ...,
        isAutoRenewing: bool | None = ...,
        expirationDate: int | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["expirationDate", b"expirationDate", "isAutoRenewing", b"isAutoRenewing", "isDeactivated", b"isDeactivated"]) -> bool: ...
    def ClearField(self, field_name: Literal["expirationDate", b"expirationDate", "isAutoRenewing", b"isAutoRenewing", "isDeactivated", b"isDeactivated"]) -> None: ...

@final
class AgentAction(Message):
    DESCRIPTOR: Descriptor

    NAME_FIELD_NUMBER: int
    DEVICEID_FIELD_NUMBER: int
    ISDELETED_FIELD_NUMBER: int
    name: str
    deviceID: int
    isDeleted: bool
    def __init__(
        self,
        *,
        name: str | None = ...,
        deviceID: int | None = ...,
        isDeleted: bool | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["deviceID", b"deviceID", "isDeleted", b"isDeleted", "name", b"name"]) -> bool: ...
    def ClearField(self, field_name: Literal["deviceID", b"deviceID", "isDeleted", b"isDeleted", "name", b"name"]) -> None: ...

@final
class AndroidUnsupportedActions(Message):
    DESCRIPTOR: Descriptor

    ALLOWED_FIELD_NUMBER: int
    allowed: bool
    def __init__(
        self,
        *,
        allowed: bool | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["allowed", b"allowed"]) -> bool: ...
    def ClearField(self, field_name: Literal["allowed", b"allowed"]) -> None: ...

@final
class PrimaryFeature(Message):
    DESCRIPTOR: Descriptor

    FLAGS_FIELD_NUMBER: int
    @property
    def flags(self) -> RepeatedScalarFieldContainer[str]: ...
    def __init__(
        self,
        *,
        flags: Iterable[str] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: Literal["flags", b"flags"]) -> None: ...

@final
class KeyExpiration(Message):
    DESCRIPTOR: Descriptor

    EXPIREDKEYEPOCH_FIELD_NUMBER: int
    expiredKeyEpoch: int
    def __init__(
        self,
        *,
        expiredKeyEpoch: int | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["expiredKeyEpoch", b"expiredKeyEpoch"]) -> bool: ...
    def ClearField(self, field_name: Literal["expiredKeyEpoch", b"expiredKeyEpoch"]) -> None: ...

@final
class SyncActionMessage(Message):
    DESCRIPTOR: Descriptor

    KEY_FIELD_NUMBER: int
    TIMESTAMP_FIELD_NUMBER: int
    timestamp: int
    @property
    def key(self) -> MessageKey: ...
    def __init__(
        self,
        *,
        key: MessageKey | None = ...,
        timestamp: int | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["key", b"key", "timestamp", b"timestamp"]) -> bool: ...
    def ClearField(self, field_name: Literal["key", b"key", "timestamp", b"timestamp"]) -> None: ...

@final
class SyncActionMessageRange(Message):
    DESCRIPTOR: Descriptor

    LASTMESSAGETIMESTAMP_FIELD_NUMBER: int
    LASTSYSTEMMESSAGETIMESTAMP_FIELD_NUMBER: int
    MESSAGES_FIELD_NUMBER: int
    lastMessageTimestamp: int
    lastSystemMessageTimestamp: int
    @property
    def messages(self) -> RepeatedCompositeFieldContainer[SyncActionMessage]: ...
    def __init__(
        self,
        *,
        lastMessageTimestamp: int | None = ...,
        lastSystemMessageTimestamp: int | None = ...,
        messages: Iterable[SyncActionMessage] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["lastMessageTimestamp", b"lastMessageTimestamp", "lastSystemMessageTimestamp", b"lastSystemMessageTimestamp"]) -> bool: ...
    def ClearField(self, field_name: Literal["lastMessageTimestamp", b"lastMessageTimestamp", "lastSystemMessageTimestamp", b"lastSystemMessageTimestamp", "messages", b"messages"]) -> None: ...

@final
class UnarchiveChatsSetting(Message):
    DESCRIPTOR: Descriptor

    UNARCHIVECHATS_FIELD_NUMBER: int
    unarchiveChats: bool
    def __init__(
        self,
        *,
        unarchiveChats: bool | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["unarchiveChats", b"unarchiveChats"]) -> bool: ...
    def ClearField(self, field_name: Literal["unarchiveChats", b"unarchiveChats"]) -> None: ...

@final
class DeleteChatAction(Message):
    DESCRIPTOR: Descriptor

    MESSAGERANGE_FIELD_NUMBER: int
    @property
    def messageRange(self) -> SyncActionMessageRange: ...
    def __init__(
        self,
        *,
        messageRange: SyncActionMessageRange | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["messageRange", b"messageRange"]) -> bool: ...
    def ClearField(self, field_name: Literal["messageRange", b"messageRange"]) -> None: ...

@final
class ClearChatAction(Message):
    DESCRIPTOR: Descriptor

    MESSAGERANGE_FIELD_NUMBER: int
    @property
    def messageRange(self) -> SyncActionMessageRange: ...
    def __init__(
        self,
        *,
        messageRange: SyncActionMessageRange | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["messageRange", b"messageRange"]) -> bool: ...
    def ClearField(self, field_name: Literal["messageRange", b"messageRange"]) -> None: ...

@final
class MarkChatAsReadAction(Message):
    DESCRIPTOR: Descriptor

    READ_FIELD_NUMBER: int
    MESSAGERANGE_FIELD_NUMBER: int
    read: bool
    @property
    def messageRange(self) -> SyncActionMessageRange: ...
    def __init__(
        self,
        *,
        read: bool | None = ...,
        messageRange: SyncActionMessageRange | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["messageRange", b"messageRange", "read", b"read"]) -> bool: ...
    def ClearField(self, field_name: Literal["messageRange", b"messageRange", "read", b"read"]) -> None: ...

@final
class DeleteMessageForMeAction(Message):
    DESCRIPTOR: Descriptor

    DELETEMEDIA_FIELD_NUMBER: int
    MESSAGETIMESTAMP_FIELD_NUMBER: int
    deleteMedia: bool
    messageTimestamp: int
    def __init__(
        self,
        *,
        deleteMedia: bool | None = ...,
        messageTimestamp: int | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["deleteMedia", b"deleteMedia", "messageTimestamp", b"messageTimestamp"]) -> bool: ...
    def ClearField(self, field_name: Literal["deleteMedia", b"deleteMedia", "messageTimestamp", b"messageTimestamp"]) -> None: ...

@final
class ArchiveChatAction(Message):
    DESCRIPTOR: Descriptor

    ARCHIVED_FIELD_NUMBER: int
    MESSAGERANGE_FIELD_NUMBER: int
    archived: bool
    @property
    def messageRange(self) -> SyncActionMessageRange: ...
    def __init__(
        self,
        *,
        archived: bool | None = ...,
        messageRange: SyncActionMessageRange | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["archived", b"archived", "messageRange", b"messageRange"]) -> bool: ...
    def ClearField(self, field_name: Literal["archived", b"archived", "messageRange", b"messageRange"]) -> None: ...

@final
class RecentEmojiWeightsAction(Message):
    DESCRIPTOR: Descriptor

    WEIGHTS_FIELD_NUMBER: int
    @property
    def weights(self) -> RepeatedCompositeFieldContainer[RecentEmojiWeight]: ...
    def __init__(
        self,
        *,
        weights: Iterable[RecentEmojiWeight] | None = ...,
    ) -> None: ...
    def ClearField(self, field_name: Literal["weights", b"weights"]) -> None: ...

@final
class LabelAssociationAction(Message):
    DESCRIPTOR: Descriptor

    LABELED_FIELD_NUMBER: int
    labeled: bool
    def __init__(
        self,
        *,
        labeled: bool | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["labeled", b"labeled"]) -> bool: ...
    def ClearField(self, field_name: Literal["labeled", b"labeled"]) -> None: ...

@final
class QuickReplyAction(Message):
    DESCRIPTOR: Descriptor

    SHORTCUT_FIELD_NUMBER: int
    MESSAGE_FIELD_NUMBER: int
    KEYWORDS_FIELD_NUMBER: int
    COUNT_FIELD_NUMBER: int
    DELETED_FIELD_NUMBER: int
    shortcut: str
    message: str
    count: int
    deleted: bool
    @property
    def keywords(self) -> RepeatedScalarFieldContainer[str]: ...
    def __init__(
        self,
        *,
        shortcut: str | None = ...,
        message: str | None = ...,
        keywords: Iterable[str] | None = ...,
        count: int | None = ...,
        deleted: bool | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["count", b"count", "deleted", b"deleted", "message", b"message", "shortcut", b"shortcut"]) -> bool: ...
    def ClearField(self, field_name: Literal["count", b"count", "deleted", b"deleted", "keywords", b"keywords", "message", b"message", "shortcut", b"shortcut"]) -> None: ...

@final
class LocaleSetting(Message):
    DESCRIPTOR: Descriptor

    LOCALE_FIELD_NUMBER: int
    locale: str
    def __init__(
        self,
        *,
        locale: str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["locale", b"locale"]) -> bool: ...
    def ClearField(self, field_name: Literal["locale", b"locale"]) -> None: ...

@final
class PushNameSetting(Message):
    DESCRIPTOR: Descriptor

    NAME_FIELD_NUMBER: int
    name: str
    def __init__(
        self,
        *,
        name: str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["name", b"name"]) -> bool: ...
    def ClearField(self, field_name: Literal["name", b"name"]) -> None: ...

@final
class SecurityNotificationSetting(Message):
    DESCRIPTOR: Descriptor

    SHOWNOTIFICATION_FIELD_NUMBER: int
    showNotification: bool
    def __init__(
        self,
        *,
        showNotification: bool | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["showNotification", b"showNotification"]) -> bool: ...
    def ClearField(self, field_name: Literal["showNotification", b"showNotification"]) -> None: ...

@final
class PinAction(Message):
    DESCRIPTOR: Descriptor

    PINNED_FIELD_NUMBER: int
    pinned: bool
    def __init__(
        self,
        *,
        pinned: bool | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["pinned", b"pinned"]) -> bool: ...
    def ClearField(self, field_name: Literal["pinned", b"pinned"]) -> None: ...

@final
class MuteAction(Message):
    DESCRIPTOR: Descriptor

    MUTED_FIELD_NUMBER: int
    MUTEENDTIMESTAMP_FIELD_NUMBER: int
    AUTOMUTED_FIELD_NUMBER: int
    muted: bool
    muteEndTimestamp: int
    autoMuted: bool
    def __init__(
        self,
        *,
        muted: bool | None = ...,
        muteEndTimestamp: int | None = ...,
        autoMuted: bool | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["autoMuted", b"autoMuted", "muteEndTimestamp", b"muteEndTimestamp", "muted", b"muted"]) -> bool: ...
    def ClearField(self, field_name: Literal["autoMuted", b"autoMuted", "muteEndTimestamp", b"muteEndTimestamp", "muted", b"muted"]) -> None: ...

@final
class ContactAction(Message):
    DESCRIPTOR: Descriptor

    FULLNAME_FIELD_NUMBER: int
    FIRSTNAME_FIELD_NUMBER: int
    LIDJID_FIELD_NUMBER: int
    SAVEONPRIMARYADDRESSBOOK_FIELD_NUMBER: int
    PNJID_FIELD_NUMBER: int
    USERNAME_FIELD_NUMBER: int
    fullName: str
    firstName: str
    lidJID: str
    saveOnPrimaryAddressbook: bool
    pnJID: str
    username: str
    def __init__(
        self,
        *,
        fullName: str | None = ...,
        firstName: str | None = ...,
        lidJID: str | None = ...,
        saveOnPrimaryAddressbook: bool | None = ...,
        pnJID: str | None = ...,
        username: str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["firstName", b"firstName", "fullName", b"fullName", "lidJID", b"lidJID", "pnJID", b"pnJID", "saveOnPrimaryAddressbook", b"saveOnPrimaryAddressbook", "username", b"username"]) -> bool: ...
    def ClearField(self, field_name: Literal["firstName", b"firstName", "fullName", b"fullName", "lidJID", b"lidJID", "pnJID", b"pnJID", "saveOnPrimaryAddressbook", b"saveOnPrimaryAddressbook", "username", b"username"]) -> None: ...

@final
class StarAction(Message):
    DESCRIPTOR: Descriptor

    STARRED_FIELD_NUMBER: int
    starred: bool
    def __init__(
        self,
        *,
        starred: bool | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["starred", b"starred"]) -> bool: ...
    def ClearField(self, field_name: Literal["starred", b"starred"]) -> None: ...

@final
class SyncActionData(Message):
    DESCRIPTOR: Descriptor

    INDEX_FIELD_NUMBER: int
    VALUE_FIELD_NUMBER: int
    PADDING_FIELD_NUMBER: int
    VERSION_FIELD_NUMBER: int
    index: bytes
    padding: bytes
    version: int
    @property
    def value(self) -> SyncActionValue: ...
    def __init__(
        self,
        *,
        index: bytes | None = ...,
        value: SyncActionValue | None = ...,
        padding: bytes | None = ...,
        version: int | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["index", b"index", "padding", b"padding", "value", b"value", "version", b"version"]) -> bool: ...
    def ClearField(self, field_name: Literal["index", b"index", "padding", b"padding", "value", b"value", "version", b"version"]) -> None: ...
