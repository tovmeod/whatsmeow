"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import sys

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions
from builtins import (
    bool,
    bytes,
    int,
    str,
    type,
)
from collections.abc import (
    Iterable,
)
from google.protobuf.descriptor import (
    Descriptor,
    EnumDescriptor,
    FileDescriptor,
)
from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer,
)
from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper,
)
from google.protobuf.message import (
    Message,
)
from typing import (
    Literal,
    NewType,
    final,
)
from ..waArmadilloXMA.WAArmadilloXMA_pb2 import (
    ExtendedContentMessage,
)
from ..waCommon.WACommon_pb2 import (
    FutureProofBehavior,
    MessageKey,
    MessageText,
    SubProtocol,
)

DESCRIPTOR: FileDescriptor

@final
class Armadillo(Message):
    DESCRIPTOR: Descriptor

    @final
    class Metadata(Message):
        DESCRIPTOR: Descriptor

        def __init__(
            self,
        ) -> None: ...

    @final
    class Payload(Message):
        DESCRIPTOR: Descriptor

        CONTENT_FIELD_NUMBER: int
        APPLICATIONDATA_FIELD_NUMBER: int
        SIGNAL_FIELD_NUMBER: int
        SUBPROTOCOL_FIELD_NUMBER: int
        @property
        def content(self) -> Armadillo.Content: ...
        @property
        def applicationData(self) -> Armadillo.ApplicationData: ...
        @property
        def signal(self) -> Armadillo.Signal: ...
        @property
        def subProtocol(self) -> Armadillo.SubProtocolPayload: ...
        def __init__(
            self,
            *,
            content: Armadillo.Content | None = ...,
            applicationData: Armadillo.ApplicationData | None = ...,
            signal: Armadillo.Signal | None = ...,
            subProtocol: Armadillo.SubProtocolPayload | None = ...,
        ) -> None: ...
        def HasField(self, field_name: Literal["applicationData", b"applicationData", "content", b"content", "payload", b"payload", "signal", b"signal", "subProtocol", b"subProtocol"]) -> bool: ...
        def ClearField(self, field_name: Literal["applicationData", b"applicationData", "content", b"content", "payload", b"payload", "signal", b"signal", "subProtocol", b"subProtocol"]) -> None: ...
        def WhichOneof(self, oneof_group: Literal["payload", b"payload"]) -> Literal["content", "applicationData", "signal", "subProtocol"] | None: ...

    @final
    class SubProtocolPayload(Message):
        DESCRIPTOR: Descriptor

        FUTUREPROOF_FIELD_NUMBER: int
        futureProof: FutureProofBehavior.ValueType
        def __init__(
            self,
            *,
            futureProof: FutureProofBehavior.ValueType | None = ...,
        ) -> None: ...
        def HasField(self, field_name: Literal["futureProof", b"futureProof"]) -> bool: ...
        def ClearField(self, field_name: Literal["futureProof", b"futureProof"]) -> None: ...

    @final
    class Signal(Message):
        DESCRIPTOR: Descriptor

        @final
        class EncryptedBackupsSecrets(Message):
            DESCRIPTOR: Descriptor

            @final
            class Epoch(Message):
                DESCRIPTOR: Descriptor

                class _EpochStatus:
                    ValueType = NewType("ValueType", int)
                    V: typing_extensions.TypeAlias = ValueType

                class _EpochStatusEnumTypeWrapper(_EnumTypeWrapper[Armadillo.Signal.EncryptedBackupsSecrets.Epoch._EpochStatus.ValueType], type):
                    DESCRIPTOR: EnumDescriptor
                    ES_OPEN: Armadillo.Signal.EncryptedBackupsSecrets.Epoch._EpochStatus.ValueType  # 1
                    ES_CLOSE: Armadillo.Signal.EncryptedBackupsSecrets.Epoch._EpochStatus.ValueType  # 2

                class EpochStatus(_EpochStatus, metaclass=_EpochStatusEnumTypeWrapper): ...
                ES_OPEN: Armadillo.Signal.EncryptedBackupsSecrets.Epoch.EpochStatus.ValueType  # 1
                ES_CLOSE: Armadillo.Signal.EncryptedBackupsSecrets.Epoch.EpochStatus.ValueType  # 2

                ID_FIELD_NUMBER: int
                ANONID_FIELD_NUMBER: int
                ROOTKEY_FIELD_NUMBER: int
                STATUS_FIELD_NUMBER: int
                ID: int
                anonID: bytes
                rootKey: bytes
                status: Armadillo.Signal.EncryptedBackupsSecrets.Epoch.EpochStatus.ValueType
                def __init__(
                    self,
                    *,
                    ID: int | None = ...,
                    anonID: bytes | None = ...,
                    rootKey: bytes | None = ...,
                    status: Armadillo.Signal.EncryptedBackupsSecrets.Epoch.EpochStatus.ValueType | None = ...,
                ) -> None: ...
                def HasField(self, field_name: Literal["ID", b"ID", "anonID", b"anonID", "rootKey", b"rootKey", "status", b"status"]) -> bool: ...
                def ClearField(self, field_name: Literal["ID", b"ID", "anonID", b"anonID", "rootKey", b"rootKey", "status", b"status"]) -> None: ...

            BACKUPID_FIELD_NUMBER: int
            SERVERDATAID_FIELD_NUMBER: int
            EPOCH_FIELD_NUMBER: int
            TEMPOCMFCLIENTSTATE_FIELD_NUMBER: int
            MAILBOXROOTKEY_FIELD_NUMBER: int
            OBLIVIOUSVALIDATIONTOKEN_FIELD_NUMBER: int
            backupID: int
            serverDataID: int
            tempOcmfClientState: bytes
            mailboxRootKey: bytes
            obliviousValidationToken: bytes
            @property
            def epoch(self) -> RepeatedCompositeFieldContainer[Armadillo.Signal.EncryptedBackupsSecrets.Epoch]: ...
            def __init__(
                self,
                *,
                backupID: int | None = ...,
                serverDataID: int | None = ...,
                epoch: Iterable[Armadillo.Signal.EncryptedBackupsSecrets.Epoch] | None = ...,
                tempOcmfClientState: bytes | None = ...,
                mailboxRootKey: bytes | None = ...,
                obliviousValidationToken: bytes | None = ...,
            ) -> None: ...
            def HasField(self, field_name: Literal["backupID", b"backupID", "mailboxRootKey", b"mailboxRootKey", "obliviousValidationToken", b"obliviousValidationToken", "serverDataID", b"serverDataID", "tempOcmfClientState", b"tempOcmfClientState"]) -> bool: ...
            def ClearField(self, field_name: Literal["backupID", b"backupID", "epoch", b"epoch", "mailboxRootKey", b"mailboxRootKey", "obliviousValidationToken", b"obliviousValidationToken", "serverDataID", b"serverDataID", "tempOcmfClientState", b"tempOcmfClientState"]) -> None: ...

        ENCRYPTEDBACKUPSSECRETS_FIELD_NUMBER: int
        @property
        def encryptedBackupsSecrets(self) -> Armadillo.Signal.EncryptedBackupsSecrets: ...
        def __init__(
            self,
            *,
            encryptedBackupsSecrets: Armadillo.Signal.EncryptedBackupsSecrets | None = ...,
        ) -> None: ...
        def HasField(self, field_name: Literal["encryptedBackupsSecrets", b"encryptedBackupsSecrets", "signal", b"signal"]) -> bool: ...
        def ClearField(self, field_name: Literal["encryptedBackupsSecrets", b"encryptedBackupsSecrets", "signal", b"signal"]) -> None: ...
        def WhichOneof(self, oneof_group: Literal["signal", b"signal"]) -> Literal["encryptedBackupsSecrets"] | None: ...

    @final
    class ApplicationData(Message):
        DESCRIPTOR: Descriptor

        @final
        class MessageHistoryDocumentMessage(Message):
            DESCRIPTOR: Descriptor

            DOCUMENT_FIELD_NUMBER: int
            @property
            def document(self) -> SubProtocol: ...
            def __init__(
                self,
                *,
                document: SubProtocol | None = ...,
            ) -> None: ...
            def HasField(self, field_name: Literal["document", b"document"]) -> bool: ...
            def ClearField(self, field_name: Literal["document", b"document"]) -> None: ...

        @final
        class AIBotResponseMessage(Message):
            DESCRIPTOR: Descriptor

            SUMMONTOKEN_FIELD_NUMBER: int
            MESSAGETEXT_FIELD_NUMBER: int
            SERIALIZEDEXTRAS_FIELD_NUMBER: int
            summonToken: str
            messageText: str
            serializedExtras: str
            def __init__(
                self,
                *,
                summonToken: str | None = ...,
                messageText: str | None = ...,
                serializedExtras: str | None = ...,
            ) -> None: ...
            def HasField(self, field_name: Literal["messageText", b"messageText", "serializedExtras", b"serializedExtras", "summonToken", b"summonToken"]) -> bool: ...
            def ClearField(self, field_name: Literal["messageText", b"messageText", "serializedExtras", b"serializedExtras", "summonToken", b"summonToken"]) -> None: ...

        @final
        class MetadataSyncAction(Message):
            DESCRIPTOR: Descriptor

            @final
            class SyncMessageAction(Message):
                DESCRIPTOR: Descriptor

                @final
                class ActionMessageDelete(Message):
                    DESCRIPTOR: Descriptor

                    def __init__(
                        self,
                    ) -> None: ...

                MESSAGEDELETE_FIELD_NUMBER: int
                KEY_FIELD_NUMBER: int
                @property
                def messageDelete(self) -> Armadillo.ApplicationData.MetadataSyncAction.SyncMessageAction.ActionMessageDelete: ...
                @property
                def key(self) -> MessageKey: ...
                def __init__(
                    self,
                    *,
                    messageDelete: Armadillo.ApplicationData.MetadataSyncAction.SyncMessageAction.ActionMessageDelete | None = ...,
                    key: MessageKey | None = ...,
                ) -> None: ...
                def HasField(self, field_name: Literal["action", b"action", "key", b"key", "messageDelete", b"messageDelete"]) -> bool: ...
                def ClearField(self, field_name: Literal["action", b"action", "key", b"key", "messageDelete", b"messageDelete"]) -> None: ...
                def WhichOneof(self, oneof_group: Literal["action", b"action"]) -> Literal["messageDelete"] | None: ...

            @final
            class SyncChatAction(Message):
                DESCRIPTOR: Descriptor

                @final
                class ActionChatRead(Message):
                    DESCRIPTOR: Descriptor

                    MESSAGERANGE_FIELD_NUMBER: int
                    READ_FIELD_NUMBER: int
                    read: bool
                    @property
                    def messageRange(self) -> Armadillo.ApplicationData.MetadataSyncAction.SyncActionMessageRange: ...
                    def __init__(
                        self,
                        *,
                        messageRange: Armadillo.ApplicationData.MetadataSyncAction.SyncActionMessageRange | None = ...,
                        read: bool | None = ...,
                    ) -> None: ...
                    def HasField(self, field_name: Literal["messageRange", b"messageRange", "read", b"read"]) -> bool: ...
                    def ClearField(self, field_name: Literal["messageRange", b"messageRange", "read", b"read"]) -> None: ...

                @final
                class ActionChatDelete(Message):
                    DESCRIPTOR: Descriptor

                    MESSAGERANGE_FIELD_NUMBER: int
                    @property
                    def messageRange(self) -> Armadillo.ApplicationData.MetadataSyncAction.SyncActionMessageRange: ...
                    def __init__(
                        self,
                        *,
                        messageRange: Armadillo.ApplicationData.MetadataSyncAction.SyncActionMessageRange | None = ...,
                    ) -> None: ...
                    def HasField(self, field_name: Literal["messageRange", b"messageRange"]) -> bool: ...
                    def ClearField(self, field_name: Literal["messageRange", b"messageRange"]) -> None: ...

                @final
                class ActionChatArchive(Message):
                    DESCRIPTOR: Descriptor

                    MESSAGERANGE_FIELD_NUMBER: int
                    ARCHIVED_FIELD_NUMBER: int
                    archived: bool
                    @property
                    def messageRange(self) -> Armadillo.ApplicationData.MetadataSyncAction.SyncActionMessageRange: ...
                    def __init__(
                        self,
                        *,
                        messageRange: Armadillo.ApplicationData.MetadataSyncAction.SyncActionMessageRange | None = ...,
                        archived: bool | None = ...,
                    ) -> None: ...
                    def HasField(self, field_name: Literal["archived", b"archived", "messageRange", b"messageRange"]) -> bool: ...
                    def ClearField(self, field_name: Literal["archived", b"archived", "messageRange", b"messageRange"]) -> None: ...

                CHATARCHIVE_FIELD_NUMBER: int
                CHATDELETE_FIELD_NUMBER: int
                CHATREAD_FIELD_NUMBER: int
                CHATID_FIELD_NUMBER: int
                chatID: str
                @property
                def chatArchive(self) -> Armadillo.ApplicationData.MetadataSyncAction.SyncChatAction.ActionChatArchive: ...
                @property
                def chatDelete(self) -> Armadillo.ApplicationData.MetadataSyncAction.SyncChatAction.ActionChatDelete: ...
                @property
                def chatRead(self) -> Armadillo.ApplicationData.MetadataSyncAction.SyncChatAction.ActionChatRead: ...
                def __init__(
                    self,
                    *,
                    chatArchive: Armadillo.ApplicationData.MetadataSyncAction.SyncChatAction.ActionChatArchive | None = ...,
                    chatDelete: Armadillo.ApplicationData.MetadataSyncAction.SyncChatAction.ActionChatDelete | None = ...,
                    chatRead: Armadillo.ApplicationData.MetadataSyncAction.SyncChatAction.ActionChatRead | None = ...,
                    chatID: str | None = ...,
                ) -> None: ...
                def HasField(self, field_name: Literal["action", b"action", "chatArchive", b"chatArchive", "chatDelete", b"chatDelete", "chatID", b"chatID", "chatRead", b"chatRead"]) -> bool: ...
                def ClearField(self, field_name: Literal["action", b"action", "chatArchive", b"chatArchive", "chatDelete", b"chatDelete", "chatID", b"chatID", "chatRead", b"chatRead"]) -> None: ...
                def WhichOneof(self, oneof_group: Literal["action", b"action"]) -> Literal["chatArchive", "chatDelete", "chatRead"] | None: ...

            @final
            class SyncActionMessage(Message):
                DESCRIPTOR: Descriptor

                KEY_FIELD_NUMBER: int
                TIMESTAMP_FIELD_NUMBER: int
                timestamp: int
                @property
                def key(self) -> MessageKey: ...
                def __init__(
                    self,
                    *,
                    key: MessageKey | None = ...,
                    timestamp: int | None = ...,
                ) -> None: ...
                def HasField(self, field_name: Literal["key", b"key", "timestamp", b"timestamp"]) -> bool: ...
                def ClearField(self, field_name: Literal["key", b"key", "timestamp", b"timestamp"]) -> None: ...

            @final
            class SyncActionMessageRange(Message):
                DESCRIPTOR: Descriptor

                LASTMESSAGETIMESTAMP_FIELD_NUMBER: int
                LASTSYSTEMMESSAGETIMESTAMP_FIELD_NUMBER: int
                MESSAGES_FIELD_NUMBER: int
                lastMessageTimestamp: int
                lastSystemMessageTimestamp: int
                @property
                def messages(self) -> RepeatedCompositeFieldContainer[Armadillo.ApplicationData.MetadataSyncAction.SyncActionMessage]: ...
                def __init__(
                    self,
                    *,
                    lastMessageTimestamp: int | None = ...,
                    lastSystemMessageTimestamp: int | None = ...,
                    messages: Iterable[Armadillo.ApplicationData.MetadataSyncAction.SyncActionMessage] | None = ...,
                ) -> None: ...
                def HasField(self, field_name: Literal["lastMessageTimestamp", b"lastMessageTimestamp", "lastSystemMessageTimestamp", b"lastSystemMessageTimestamp"]) -> bool: ...
                def ClearField(self, field_name: Literal["lastMessageTimestamp", b"lastMessageTimestamp", "lastSystemMessageTimestamp", b"lastSystemMessageTimestamp", "messages", b"messages"]) -> None: ...

            CHATACTION_FIELD_NUMBER: int
            MESSAGEACTION_FIELD_NUMBER: int
            ACTIONTIMESTAMP_FIELD_NUMBER: int
            actionTimestamp: int
            @property
            def chatAction(self) -> Armadillo.ApplicationData.MetadataSyncAction.SyncChatAction: ...
            @property
            def messageAction(self) -> Armadillo.ApplicationData.MetadataSyncAction.SyncMessageAction: ...
            def __init__(
                self,
                *,
                chatAction: Armadillo.ApplicationData.MetadataSyncAction.SyncChatAction | None = ...,
                messageAction: Armadillo.ApplicationData.MetadataSyncAction.SyncMessageAction | None = ...,
                actionTimestamp: int | None = ...,
            ) -> None: ...
            def HasField(self, field_name: Literal["actionTimestamp", b"actionTimestamp", "actionType", b"actionType", "chatAction", b"chatAction", "messageAction", b"messageAction"]) -> bool: ...
            def ClearField(self, field_name: Literal["actionTimestamp", b"actionTimestamp", "actionType", b"actionType", "chatAction", b"chatAction", "messageAction", b"messageAction"]) -> None: ...
            def WhichOneof(self, oneof_group: Literal["actionType", b"actionType"]) -> Literal["chatAction", "messageAction"] | None: ...

        @final
        class MetadataSyncNotification(Message):
            DESCRIPTOR: Descriptor

            ACTIONS_FIELD_NUMBER: int
            @property
            def actions(self) -> RepeatedCompositeFieldContainer[Armadillo.ApplicationData.MetadataSyncAction]: ...
            def __init__(
                self,
                *,
                actions: Iterable[Armadillo.ApplicationData.MetadataSyncAction] | None = ...,
            ) -> None: ...
            def ClearField(self, field_name: Literal["actions", b"actions"]) -> None: ...

        METADATASYNC_FIELD_NUMBER: int
        AIBOTRESPONSE_FIELD_NUMBER: int
        MESSAGEHISTORYDOCUMENTMESSAGE_FIELD_NUMBER: int
        @property
        def metadataSync(self) -> Armadillo.ApplicationData.MetadataSyncNotification: ...
        @property
        def aiBotResponse(self) -> Armadillo.ApplicationData.AIBotResponseMessage: ...
        @property
        def messageHistoryDocumentMessage(self) -> Armadillo.ApplicationData.MessageHistoryDocumentMessage: ...
        def __init__(
            self,
            *,
            metadataSync: Armadillo.ApplicationData.MetadataSyncNotification | None = ...,
            aiBotResponse: Armadillo.ApplicationData.AIBotResponseMessage | None = ...,
            messageHistoryDocumentMessage: Armadillo.ApplicationData.MessageHistoryDocumentMessage | None = ...,
        ) -> None: ...
        def HasField(self, field_name: Literal["aiBotResponse", b"aiBotResponse", "applicationData", b"applicationData", "messageHistoryDocumentMessage", b"messageHistoryDocumentMessage", "metadataSync", b"metadataSync"]) -> bool: ...
        def ClearField(self, field_name: Literal["aiBotResponse", b"aiBotResponse", "applicationData", b"applicationData", "messageHistoryDocumentMessage", b"messageHistoryDocumentMessage", "metadataSync", b"metadataSync"]) -> None: ...
        def WhichOneof(self, oneof_group: Literal["applicationData", b"applicationData"]) -> Literal["metadataSync", "aiBotResponse", "messageHistoryDocumentMessage"] | None: ...

    @final
    class Content(Message):
        DESCRIPTOR: Descriptor

        @final
        class PaymentsTransactionMessage(Message):
            DESCRIPTOR: Descriptor

            class _PaymentStatus:
                ValueType = NewType("ValueType", int)
                V: typing_extensions.TypeAlias = ValueType

            class _PaymentStatusEnumTypeWrapper(_EnumTypeWrapper[Armadillo.Content.PaymentsTransactionMessage._PaymentStatus.ValueType], type):
                DESCRIPTOR: EnumDescriptor
                PAYMENT_UNKNOWN: Armadillo.Content.PaymentsTransactionMessage._PaymentStatus.ValueType  # 0
                REQUEST_INITED: Armadillo.Content.PaymentsTransactionMessage._PaymentStatus.ValueType  # 4
                REQUEST_DECLINED: Armadillo.Content.PaymentsTransactionMessage._PaymentStatus.ValueType  # 5
                REQUEST_TRANSFER_INITED: Armadillo.Content.PaymentsTransactionMessage._PaymentStatus.ValueType  # 6
                REQUEST_TRANSFER_COMPLETED: Armadillo.Content.PaymentsTransactionMessage._PaymentStatus.ValueType  # 7
                REQUEST_TRANSFER_FAILED: Armadillo.Content.PaymentsTransactionMessage._PaymentStatus.ValueType  # 8
                REQUEST_CANCELED: Armadillo.Content.PaymentsTransactionMessage._PaymentStatus.ValueType  # 9
                REQUEST_EXPIRED: Armadillo.Content.PaymentsTransactionMessage._PaymentStatus.ValueType  # 10
                TRANSFER_INITED: Armadillo.Content.PaymentsTransactionMessage._PaymentStatus.ValueType  # 11
                TRANSFER_PENDING: Armadillo.Content.PaymentsTransactionMessage._PaymentStatus.ValueType  # 12
                TRANSFER_PENDING_RECIPIENT_VERIFICATION: Armadillo.Content.PaymentsTransactionMessage._PaymentStatus.ValueType  # 13
                TRANSFER_CANCELED: Armadillo.Content.PaymentsTransactionMessage._PaymentStatus.ValueType  # 14
                TRANSFER_COMPLETED: Armadillo.Content.PaymentsTransactionMessage._PaymentStatus.ValueType  # 15
                TRANSFER_NO_RECEIVER_CREDENTIAL_NO_RTS_PENDING_CANCELED: Armadillo.Content.PaymentsTransactionMessage._PaymentStatus.ValueType  # 16
                TRANSFER_NO_RECEIVER_CREDENTIAL_NO_RTS_PENDING_OTHER: Armadillo.Content.PaymentsTransactionMessage._PaymentStatus.ValueType  # 17
                TRANSFER_REFUNDED: Armadillo.Content.PaymentsTransactionMessage._PaymentStatus.ValueType  # 18
                TRANSFER_PARTIAL_REFUND: Armadillo.Content.PaymentsTransactionMessage._PaymentStatus.ValueType  # 19
                TRANSFER_CHARGED_BACK: Armadillo.Content.PaymentsTransactionMessage._PaymentStatus.ValueType  # 20
                TRANSFER_EXPIRED: Armadillo.Content.PaymentsTransactionMessage._PaymentStatus.ValueType  # 21
                TRANSFER_DECLINED: Armadillo.Content.PaymentsTransactionMessage._PaymentStatus.ValueType  # 22
                TRANSFER_UNAVAILABLE: Armadillo.Content.PaymentsTransactionMessage._PaymentStatus.ValueType  # 23

            class PaymentStatus(_PaymentStatus, metaclass=_PaymentStatusEnumTypeWrapper): ...
            PAYMENT_UNKNOWN: Armadillo.Content.PaymentsTransactionMessage.PaymentStatus.ValueType  # 0
            REQUEST_INITED: Armadillo.Content.PaymentsTransactionMessage.PaymentStatus.ValueType  # 4
            REQUEST_DECLINED: Armadillo.Content.PaymentsTransactionMessage.PaymentStatus.ValueType  # 5
            REQUEST_TRANSFER_INITED: Armadillo.Content.PaymentsTransactionMessage.PaymentStatus.ValueType  # 6
            REQUEST_TRANSFER_COMPLETED: Armadillo.Content.PaymentsTransactionMessage.PaymentStatus.ValueType  # 7
            REQUEST_TRANSFER_FAILED: Armadillo.Content.PaymentsTransactionMessage.PaymentStatus.ValueType  # 8
            REQUEST_CANCELED: Armadillo.Content.PaymentsTransactionMessage.PaymentStatus.ValueType  # 9
            REQUEST_EXPIRED: Armadillo.Content.PaymentsTransactionMessage.PaymentStatus.ValueType  # 10
            TRANSFER_INITED: Armadillo.Content.PaymentsTransactionMessage.PaymentStatus.ValueType  # 11
            TRANSFER_PENDING: Armadillo.Content.PaymentsTransactionMessage.PaymentStatus.ValueType  # 12
            TRANSFER_PENDING_RECIPIENT_VERIFICATION: Armadillo.Content.PaymentsTransactionMessage.PaymentStatus.ValueType  # 13
            TRANSFER_CANCELED: Armadillo.Content.PaymentsTransactionMessage.PaymentStatus.ValueType  # 14
            TRANSFER_COMPLETED: Armadillo.Content.PaymentsTransactionMessage.PaymentStatus.ValueType  # 15
            TRANSFER_NO_RECEIVER_CREDENTIAL_NO_RTS_PENDING_CANCELED: Armadillo.Content.PaymentsTransactionMessage.PaymentStatus.ValueType  # 16
            TRANSFER_NO_RECEIVER_CREDENTIAL_NO_RTS_PENDING_OTHER: Armadillo.Content.PaymentsTransactionMessage.PaymentStatus.ValueType  # 17
            TRANSFER_REFUNDED: Armadillo.Content.PaymentsTransactionMessage.PaymentStatus.ValueType  # 18
            TRANSFER_PARTIAL_REFUND: Armadillo.Content.PaymentsTransactionMessage.PaymentStatus.ValueType  # 19
            TRANSFER_CHARGED_BACK: Armadillo.Content.PaymentsTransactionMessage.PaymentStatus.ValueType  # 20
            TRANSFER_EXPIRED: Armadillo.Content.PaymentsTransactionMessage.PaymentStatus.ValueType  # 21
            TRANSFER_DECLINED: Armadillo.Content.PaymentsTransactionMessage.PaymentStatus.ValueType  # 22
            TRANSFER_UNAVAILABLE: Armadillo.Content.PaymentsTransactionMessage.PaymentStatus.ValueType  # 23

            TRANSACTIONID_FIELD_NUMBER: int
            AMOUNT_FIELD_NUMBER: int
            CURRENCY_FIELD_NUMBER: int
            PAYMENTSTATUS_FIELD_NUMBER: int
            EXTENDEDCONTENTMESSAGE_FIELD_NUMBER: int
            transactionID: int
            amount: str
            currency: str
            paymentStatus: Armadillo.Content.PaymentsTransactionMessage.PaymentStatus.ValueType
            @property
            def extendedContentMessage(self) -> ExtendedContentMessage: ...
            def __init__(
                self,
                *,
                transactionID: int | None = ...,
                amount: str | None = ...,
                currency: str | None = ...,
                paymentStatus: Armadillo.Content.PaymentsTransactionMessage.PaymentStatus.ValueType | None = ...,
                extendedContentMessage: ExtendedContentMessage | None = ...,
            ) -> None: ...
            def HasField(self, field_name: Literal["amount", b"amount", "currency", b"currency", "extendedContentMessage", b"extendedContentMessage", "paymentStatus", b"paymentStatus", "transactionID", b"transactionID"]) -> bool: ...
            def ClearField(self, field_name: Literal["amount", b"amount", "currency", b"currency", "extendedContentMessage", b"extendedContentMessage", "paymentStatus", b"paymentStatus", "transactionID", b"transactionID"]) -> None: ...

        @final
        class NetworkVerificationMessage(Message):
            DESCRIPTOR: Descriptor

            CODETEXT_FIELD_NUMBER: int
            codeText: str
            def __init__(
                self,
                *,
                codeText: str | None = ...,
            ) -> None: ...
            def HasField(self, field_name: Literal["codeText", b"codeText"]) -> bool: ...
            def ClearField(self, field_name: Literal["codeText", b"codeText"]) -> None: ...

        @final
        class NoteReplyMessage(Message):
            DESCRIPTOR: Descriptor

            TEXTCONTENT_FIELD_NUMBER: int
            STICKERCONTENT_FIELD_NUMBER: int
            VIDEOCONTENT_FIELD_NUMBER: int
            NOTEID_FIELD_NUMBER: int
            NOTETEXT_FIELD_NUMBER: int
            NOTETIMESTAMPMS_FIELD_NUMBER: int
            noteID: str
            noteTimestampMS: int
            @property
            def textContent(self) -> MessageText: ...
            @property
            def stickerContent(self) -> SubProtocol: ...
            @property
            def videoContent(self) -> SubProtocol: ...
            @property
            def noteText(self) -> MessageText: ...
            def __init__(
                self,
                *,
                textContent: MessageText | None = ...,
                stickerContent: SubProtocol | None = ...,
                videoContent: SubProtocol | None = ...,
                noteID: str | None = ...,
                noteText: MessageText | None = ...,
                noteTimestampMS: int | None = ...,
            ) -> None: ...
            def HasField(self, field_name: Literal["noteID", b"noteID", "noteReplyContent", b"noteReplyContent", "noteText", b"noteText", "noteTimestampMS", b"noteTimestampMS", "stickerContent", b"stickerContent", "textContent", b"textContent", "videoContent", b"videoContent"]) -> bool: ...
            def ClearField(self, field_name: Literal["noteID", b"noteID", "noteReplyContent", b"noteReplyContent", "noteText", b"noteText", "noteTimestampMS", b"noteTimestampMS", "stickerContent", b"stickerContent", "textContent", b"textContent", "videoContent", b"videoContent"]) -> None: ...
            def WhichOneof(self, oneof_group: Literal["noteReplyContent", b"noteReplyContent"]) -> Literal["textContent", "stickerContent", "videoContent"] | None: ...

        @final
        class BumpExistingMessage(Message):
            DESCRIPTOR: Descriptor

            KEY_FIELD_NUMBER: int
            @property
            def key(self) -> MessageKey: ...
            def __init__(
                self,
                *,
                key: MessageKey | None = ...,
            ) -> None: ...
            def HasField(self, field_name: Literal["key", b"key"]) -> bool: ...
            def ClearField(self, field_name: Literal["key", b"key"]) -> None: ...

        @final
        class ImageGalleryMessage(Message):
            DESCRIPTOR: Descriptor

            IMAGES_FIELD_NUMBER: int
            @property
            def images(self) -> RepeatedCompositeFieldContainer[SubProtocol]: ...
            def __init__(
                self,
                *,
                images: Iterable[SubProtocol] | None = ...,
            ) -> None: ...
            def ClearField(self, field_name: Literal["images", b"images"]) -> None: ...

        @final
        class ScreenshotAction(Message):
            DESCRIPTOR: Descriptor

            class _ScreenshotType:
                ValueType = NewType("ValueType", int)
                V: typing_extensions.TypeAlias = ValueType

            class _ScreenshotTypeEnumTypeWrapper(_EnumTypeWrapper[Armadillo.Content.ScreenshotAction._ScreenshotType.ValueType], type):
                DESCRIPTOR: EnumDescriptor
                SCREENSHOT_IMAGE: Armadillo.Content.ScreenshotAction._ScreenshotType.ValueType  # 1
                SCREEN_RECORDING: Armadillo.Content.ScreenshotAction._ScreenshotType.ValueType  # 2

            class ScreenshotType(_ScreenshotType, metaclass=_ScreenshotTypeEnumTypeWrapper): ...
            SCREENSHOT_IMAGE: Armadillo.Content.ScreenshotAction.ScreenshotType.ValueType  # 1
            SCREEN_RECORDING: Armadillo.Content.ScreenshotAction.ScreenshotType.ValueType  # 2

            SCREENSHOTTYPE_FIELD_NUMBER: int
            screenshotType: Armadillo.Content.ScreenshotAction.ScreenshotType.ValueType
            def __init__(
                self,
                *,
                screenshotType: Armadillo.Content.ScreenshotAction.ScreenshotType.ValueType | None = ...,
            ) -> None: ...
            def HasField(self, field_name: Literal["screenshotType", b"screenshotType"]) -> bool: ...
            def ClearField(self, field_name: Literal["screenshotType", b"screenshotType"]) -> None: ...

        @final
        class ExtendedContentMessageWithSear(Message):
            DESCRIPTOR: Descriptor

            SEARID_FIELD_NUMBER: int
            PAYLOAD_FIELD_NUMBER: int
            NATIVEURL_FIELD_NUMBER: int
            SEARASSOCIATEDMESSAGE_FIELD_NUMBER: int
            SEARSENTWITHMESSAGEID_FIELD_NUMBER: int
            searID: str
            payload: bytes
            nativeURL: str
            searSentWithMessageID: str
            @property
            def searAssociatedMessage(self) -> SubProtocol: ...
            def __init__(
                self,
                *,
                searID: str | None = ...,
                payload: bytes | None = ...,
                nativeURL: str | None = ...,
                searAssociatedMessage: SubProtocol | None = ...,
                searSentWithMessageID: str | None = ...,
            ) -> None: ...
            def HasField(self, field_name: Literal["nativeURL", b"nativeURL", "payload", b"payload", "searAssociatedMessage", b"searAssociatedMessage", "searID", b"searID", "searSentWithMessageID", b"searSentWithMessageID"]) -> bool: ...
            def ClearField(self, field_name: Literal["nativeURL", b"nativeURL", "payload", b"payload", "searAssociatedMessage", b"searAssociatedMessage", "searID", b"searID", "searSentWithMessageID", b"searSentWithMessageID"]) -> None: ...

        @final
        class RavenActionNotifMessage(Message):
            DESCRIPTOR: Descriptor

            class _ActionType:
                ValueType = NewType("ValueType", int)
                V: typing_extensions.TypeAlias = ValueType

            class _ActionTypeEnumTypeWrapper(_EnumTypeWrapper[Armadillo.Content.RavenActionNotifMessage._ActionType.ValueType], type):
                DESCRIPTOR: EnumDescriptor
                PLAYED: Armadillo.Content.RavenActionNotifMessage._ActionType.ValueType  # 0
                SCREENSHOT: Armadillo.Content.RavenActionNotifMessage._ActionType.ValueType  # 1
                FORCE_DISABLE: Armadillo.Content.RavenActionNotifMessage._ActionType.ValueType  # 2

            class ActionType(_ActionType, metaclass=_ActionTypeEnumTypeWrapper): ...
            PLAYED: Armadillo.Content.RavenActionNotifMessage.ActionType.ValueType  # 0
            SCREENSHOT: Armadillo.Content.RavenActionNotifMessage.ActionType.ValueType  # 1
            FORCE_DISABLE: Armadillo.Content.RavenActionNotifMessage.ActionType.ValueType  # 2

            KEY_FIELD_NUMBER: int
            ACTIONTIMESTAMP_FIELD_NUMBER: int
            ACTIONTYPE_FIELD_NUMBER: int
            actionTimestamp: int
            actionType: Armadillo.Content.RavenActionNotifMessage.ActionType.ValueType
            @property
            def key(self) -> MessageKey: ...
            def __init__(
                self,
                *,
                key: MessageKey | None = ...,
                actionTimestamp: int | None = ...,
                actionType: Armadillo.Content.RavenActionNotifMessage.ActionType.ValueType | None = ...,
            ) -> None: ...
            def HasField(self, field_name: Literal["actionTimestamp", b"actionTimestamp", "actionType", b"actionType", "key", b"key"]) -> bool: ...
            def ClearField(self, field_name: Literal["actionTimestamp", b"actionTimestamp", "actionType", b"actionType", "key", b"key"]) -> None: ...

        @final
        class RavenMessage(Message):
            DESCRIPTOR: Descriptor

            class _EphemeralType:
                ValueType = NewType("ValueType", int)
                V: typing_extensions.TypeAlias = ValueType

            class _EphemeralTypeEnumTypeWrapper(_EnumTypeWrapper[Armadillo.Content.RavenMessage._EphemeralType.ValueType], type):
                DESCRIPTOR: EnumDescriptor
                VIEW_ONCE: Armadillo.Content.RavenMessage._EphemeralType.ValueType  # 0
                ALLOW_REPLAY: Armadillo.Content.RavenMessage._EphemeralType.ValueType  # 1
                KEEP_IN_CHAT: Armadillo.Content.RavenMessage._EphemeralType.ValueType  # 2

            class EphemeralType(_EphemeralType, metaclass=_EphemeralTypeEnumTypeWrapper): ...
            VIEW_ONCE: Armadillo.Content.RavenMessage.EphemeralType.ValueType  # 0
            ALLOW_REPLAY: Armadillo.Content.RavenMessage.EphemeralType.ValueType  # 1
            KEEP_IN_CHAT: Armadillo.Content.RavenMessage.EphemeralType.ValueType  # 2

            IMAGEMESSAGE_FIELD_NUMBER: int
            VIDEOMESSAGE_FIELD_NUMBER: int
            EPHEMERALTYPE_FIELD_NUMBER: int
            ephemeralType: Armadillo.Content.RavenMessage.EphemeralType.ValueType
            @property
            def imageMessage(self) -> SubProtocol: ...
            @property
            def videoMessage(self) -> SubProtocol: ...
            def __init__(
                self,
                *,
                imageMessage: SubProtocol | None = ...,
                videoMessage: SubProtocol | None = ...,
                ephemeralType: Armadillo.Content.RavenMessage.EphemeralType.ValueType | None = ...,
            ) -> None: ...
            def HasField(self, field_name: Literal["ephemeralType", b"ephemeralType", "imageMessage", b"imageMessage", "mediaContent", b"mediaContent", "videoMessage", b"videoMessage"]) -> bool: ...
            def ClearField(self, field_name: Literal["ephemeralType", b"ephemeralType", "imageMessage", b"imageMessage", "mediaContent", b"mediaContent", "videoMessage", b"videoMessage"]) -> None: ...
            def WhichOneof(self, oneof_group: Literal["mediaContent", b"mediaContent"]) -> Literal["imageMessage", "videoMessage"] | None: ...

        @final
        class CommonSticker(Message):
            DESCRIPTOR: Descriptor

            class _StickerType:
                ValueType = NewType("ValueType", int)
                V: typing_extensions.TypeAlias = ValueType

            class _StickerTypeEnumTypeWrapper(_EnumTypeWrapper[Armadillo.Content.CommonSticker._StickerType.ValueType], type):
                DESCRIPTOR: EnumDescriptor
                SMALL_LIKE: Armadillo.Content.CommonSticker._StickerType.ValueType  # 1
                MEDIUM_LIKE: Armadillo.Content.CommonSticker._StickerType.ValueType  # 2
                LARGE_LIKE: Armadillo.Content.CommonSticker._StickerType.ValueType  # 3

            class StickerType(_StickerType, metaclass=_StickerTypeEnumTypeWrapper): ...
            SMALL_LIKE: Armadillo.Content.CommonSticker.StickerType.ValueType  # 1
            MEDIUM_LIKE: Armadillo.Content.CommonSticker.StickerType.ValueType  # 2
            LARGE_LIKE: Armadillo.Content.CommonSticker.StickerType.ValueType  # 3

            STICKERTYPE_FIELD_NUMBER: int
            stickerType: Armadillo.Content.CommonSticker.StickerType.ValueType
            def __init__(
                self,
                *,
                stickerType: Armadillo.Content.CommonSticker.StickerType.ValueType | None = ...,
            ) -> None: ...
            def HasField(self, field_name: Literal["stickerType", b"stickerType"]) -> bool: ...
            def ClearField(self, field_name: Literal["stickerType", b"stickerType"]) -> None: ...

        COMMONSTICKER_FIELD_NUMBER: int
        SCREENSHOTACTION_FIELD_NUMBER: int
        EXTENDEDCONTENTMESSAGE_FIELD_NUMBER: int
        RAVENMESSAGE_FIELD_NUMBER: int
        RAVENACTIONNOTIFMESSAGE_FIELD_NUMBER: int
        EXTENDEDMESSAGECONTENTWITHSEAR_FIELD_NUMBER: int
        IMAGEGALLERYMESSAGE_FIELD_NUMBER: int
        PAYMENTSTRANSACTIONMESSAGE_FIELD_NUMBER: int
        BUMPEXISTINGMESSAGE_FIELD_NUMBER: int
        NOTEREPLYMESSAGE_FIELD_NUMBER: int
        RAVENMESSAGEMSGR_FIELD_NUMBER: int
        NETWORKVERIFICATIONMESSAGE_FIELD_NUMBER: int
        @property
        def commonSticker(self) -> Armadillo.Content.CommonSticker: ...
        @property
        def screenshotAction(self) -> Armadillo.Content.ScreenshotAction: ...
        @property
        def extendedContentMessage(self) -> ExtendedContentMessage: ...
        @property
        def ravenMessage(self) -> Armadillo.Content.RavenMessage: ...
        @property
        def ravenActionNotifMessage(self) -> Armadillo.Content.RavenActionNotifMessage: ...
        @property
        def extendedMessageContentWithSear(self) -> Armadillo.Content.ExtendedContentMessageWithSear: ...
        @property
        def imageGalleryMessage(self) -> Armadillo.Content.ImageGalleryMessage: ...
        @property
        def paymentsTransactionMessage(self) -> Armadillo.Content.PaymentsTransactionMessage: ...
        @property
        def bumpExistingMessage(self) -> Armadillo.Content.BumpExistingMessage: ...
        @property
        def noteReplyMessage(self) -> Armadillo.Content.NoteReplyMessage: ...
        @property
        def ravenMessageMsgr(self) -> Armadillo.Content.RavenMessage: ...
        @property
        def networkVerificationMessage(self) -> Armadillo.Content.NetworkVerificationMessage: ...
        def __init__(
            self,
            *,
            commonSticker: Armadillo.Content.CommonSticker | None = ...,
            screenshotAction: Armadillo.Content.ScreenshotAction | None = ...,
            extendedContentMessage: ExtendedContentMessage | None = ...,
            ravenMessage: Armadillo.Content.RavenMessage | None = ...,
            ravenActionNotifMessage: Armadillo.Content.RavenActionNotifMessage | None = ...,
            extendedMessageContentWithSear: Armadillo.Content.ExtendedContentMessageWithSear | None = ...,
            imageGalleryMessage: Armadillo.Content.ImageGalleryMessage | None = ...,
            paymentsTransactionMessage: Armadillo.Content.PaymentsTransactionMessage | None = ...,
            bumpExistingMessage: Armadillo.Content.BumpExistingMessage | None = ...,
            noteReplyMessage: Armadillo.Content.NoteReplyMessage | None = ...,
            ravenMessageMsgr: Armadillo.Content.RavenMessage | None = ...,
            networkVerificationMessage: Armadillo.Content.NetworkVerificationMessage | None = ...,
        ) -> None: ...
        def HasField(self, field_name: Literal["bumpExistingMessage", b"bumpExistingMessage", "commonSticker", b"commonSticker", "content", b"content", "extendedContentMessage", b"extendedContentMessage", "extendedMessageContentWithSear", b"extendedMessageContentWithSear", "imageGalleryMessage", b"imageGalleryMessage", "networkVerificationMessage", b"networkVerificationMessage", "noteReplyMessage", b"noteReplyMessage", "paymentsTransactionMessage", b"paymentsTransactionMessage", "ravenActionNotifMessage", b"ravenActionNotifMessage", "ravenMessage", b"ravenMessage", "ravenMessageMsgr", b"ravenMessageMsgr", "screenshotAction", b"screenshotAction"]) -> bool: ...
        def ClearField(self, field_name: Literal["bumpExistingMessage", b"bumpExistingMessage", "commonSticker", b"commonSticker", "content", b"content", "extendedContentMessage", b"extendedContentMessage", "extendedMessageContentWithSear", b"extendedMessageContentWithSear", "imageGalleryMessage", b"imageGalleryMessage", "networkVerificationMessage", b"networkVerificationMessage", "noteReplyMessage", b"noteReplyMessage", "paymentsTransactionMessage", b"paymentsTransactionMessage", "ravenActionNotifMessage", b"ravenActionNotifMessage", "ravenMessage", b"ravenMessage", "ravenMessageMsgr", b"ravenMessageMsgr", "screenshotAction", b"screenshotAction"]) -> None: ...
        def WhichOneof(self, oneof_group: Literal["content", b"content"]) -> Literal["commonSticker", "screenshotAction", "extendedContentMessage", "ravenMessage", "ravenActionNotifMessage", "extendedMessageContentWithSear", "imageGalleryMessage", "paymentsTransactionMessage", "bumpExistingMessage", "noteReplyMessage", "ravenMessageMsgr", "networkVerificationMessage"] | None: ...

    PAYLOAD_FIELD_NUMBER: int
    METADATA_FIELD_NUMBER: int
    @property
    def payload(self) -> Armadillo.Payload: ...
    @property
    def metadata(self) -> Armadillo.Metadata: ...
    def __init__(
        self,
        *,
        payload: Armadillo.Payload | None = ...,
        metadata: Armadillo.Metadata | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["metadata", b"metadata", "payload", b"payload"]) -> bool: ...
    def ClearField(self, field_name: Literal["metadata", b"metadata", "payload", b"payload"]) -> None: ...
