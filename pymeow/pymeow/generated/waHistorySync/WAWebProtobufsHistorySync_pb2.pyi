"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import sys

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions
from builtins import (
    bool,
    bytes,
    float,
    int,
    str,
    type,
)
from collections.abc import (
    Iterable,
)
from google.protobuf.descriptor import (
    Descriptor,
    EnumDescriptor,
    FileDescriptor,
)
from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer,
)
from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper,
)
from google.protobuf.message import (
    Message,
)
from typing import (
    Literal,
    NewType,
    final,
)
from ..waChatLockSettings.WAProtobufsChatLockSettings_pb2 import (
    ChatLockSettings,
)
from ..waCommon.WACommon_pb2 import (
    LimitSharing,
)
from ..waE2E.WAWebProtobufsE2E_pb2 import (
    DisappearingMode,
)
from ..waSyncAction.WASyncAction_pb2 import (
    CallLogRecord,
)
from ..waWeb.WAWebProtobufsWeb_pb2 import (
    WebMessageInfo,
)

DESCRIPTOR: FileDescriptor

class _MediaVisibility:
    ValueType = NewType("ValueType", int)
    V: typing_extensions.TypeAlias = ValueType

class _MediaVisibilityEnumTypeWrapper(_EnumTypeWrapper[_MediaVisibility.ValueType], type):
    DESCRIPTOR: EnumDescriptor
    DEFAULT: _MediaVisibility.ValueType  # 0
    OFF: _MediaVisibility.ValueType  # 1
    ON: _MediaVisibility.ValueType  # 2

class MediaVisibility(_MediaVisibility, metaclass=_MediaVisibilityEnumTypeWrapper): ...

DEFAULT: MediaVisibility.ValueType  # 0
OFF: MediaVisibility.ValueType  # 1
ON: MediaVisibility.ValueType  # 2

class _PrivacySystemMessage:
    ValueType = NewType("ValueType", int)
    V: typing_extensions.TypeAlias = ValueType

class _PrivacySystemMessageEnumTypeWrapper(_EnumTypeWrapper[_PrivacySystemMessage.ValueType], type):
    DESCRIPTOR: EnumDescriptor
    E2EE_MSG: _PrivacySystemMessage.ValueType  # 1
    NE2EE_SELF: _PrivacySystemMessage.ValueType  # 2
    NE2EE_OTHER: _PrivacySystemMessage.ValueType  # 3

class PrivacySystemMessage(_PrivacySystemMessage, metaclass=_PrivacySystemMessageEnumTypeWrapper): ...

E2EE_MSG: PrivacySystemMessage.ValueType  # 1
NE2EE_SELF: PrivacySystemMessage.ValueType  # 2
NE2EE_OTHER: PrivacySystemMessage.ValueType  # 3

@final
class HistorySync(Message):
    DESCRIPTOR: Descriptor

    class _BotAIWaitListState:
        ValueType = NewType("ValueType", int)
        V: typing_extensions.TypeAlias = ValueType

    class _BotAIWaitListStateEnumTypeWrapper(_EnumTypeWrapper[HistorySync._BotAIWaitListState.ValueType], type):
        DESCRIPTOR: EnumDescriptor
        IN_WAITLIST: HistorySync._BotAIWaitListState.ValueType  # 0
        AI_AVAILABLE: HistorySync._BotAIWaitListState.ValueType  # 1

    class BotAIWaitListState(_BotAIWaitListState, metaclass=_BotAIWaitListStateEnumTypeWrapper): ...
    IN_WAITLIST: HistorySync.BotAIWaitListState.ValueType  # 0
    AI_AVAILABLE: HistorySync.BotAIWaitListState.ValueType  # 1

    class _HistorySyncType:
        ValueType = NewType("ValueType", int)
        V: typing_extensions.TypeAlias = ValueType

    class _HistorySyncTypeEnumTypeWrapper(_EnumTypeWrapper[HistorySync._HistorySyncType.ValueType], type):
        DESCRIPTOR: EnumDescriptor
        INITIAL_BOOTSTRAP: HistorySync._HistorySyncType.ValueType  # 0
        INITIAL_STATUS_V3: HistorySync._HistorySyncType.ValueType  # 1
        FULL: HistorySync._HistorySyncType.ValueType  # 2
        RECENT: HistorySync._HistorySyncType.ValueType  # 3
        PUSH_NAME: HistorySync._HistorySyncType.ValueType  # 4
        NON_BLOCKING_DATA: HistorySync._HistorySyncType.ValueType  # 5
        ON_DEMAND: HistorySync._HistorySyncType.ValueType  # 6

    class HistorySyncType(_HistorySyncType, metaclass=_HistorySyncTypeEnumTypeWrapper): ...
    INITIAL_BOOTSTRAP: HistorySync.HistorySyncType.ValueType  # 0
    INITIAL_STATUS_V3: HistorySync.HistorySyncType.ValueType  # 1
    FULL: HistorySync.HistorySyncType.ValueType  # 2
    RECENT: HistorySync.HistorySyncType.ValueType  # 3
    PUSH_NAME: HistorySync.HistorySyncType.ValueType  # 4
    NON_BLOCKING_DATA: HistorySync.HistorySyncType.ValueType  # 5
    ON_DEMAND: HistorySync.HistorySyncType.ValueType  # 6

    SYNCTYPE_FIELD_NUMBER: int
    CONVERSATIONS_FIELD_NUMBER: int
    STATUSV3MESSAGES_FIELD_NUMBER: int
    CHUNKORDER_FIELD_NUMBER: int
    PROGRESS_FIELD_NUMBER: int
    PUSHNAMES_FIELD_NUMBER: int
    GLOBALSETTINGS_FIELD_NUMBER: int
    THREADIDUSERSECRET_FIELD_NUMBER: int
    THREADDSTIMEFRAMEOFFSET_FIELD_NUMBER: int
    RECENTSTICKERS_FIELD_NUMBER: int
    PASTPARTICIPANTS_FIELD_NUMBER: int
    CALLLOGRECORDS_FIELD_NUMBER: int
    AIWAITLISTSTATE_FIELD_NUMBER: int
    PHONENUMBERTOLIDMAPPINGS_FIELD_NUMBER: int
    COMPANIONMETANONCE_FIELD_NUMBER: int
    SHAREABLECHATIDENTIFIERENCRYPTIONKEY_FIELD_NUMBER: int
    ACCOUNTS_FIELD_NUMBER: int
    syncType: HistorySync.HistorySyncType.ValueType
    chunkOrder: int
    progress: int
    threadIDUserSecret: bytes
    threadDsTimeframeOffset: int
    aiWaitListState: HistorySync.BotAIWaitListState.ValueType
    companionMetaNonce: str
    shareableChatIdentifierEncryptionKey: bytes
    @property
    def conversations(self) -> RepeatedCompositeFieldContainer[Conversation]: ...
    @property
    def statusV3Messages(self) -> RepeatedCompositeFieldContainer[WebMessageInfo]: ...
    @property
    def pushnames(self) -> RepeatedCompositeFieldContainer[Pushname]: ...
    @property
    def globalSettings(self) -> GlobalSettings: ...
    @property
    def recentStickers(self) -> RepeatedCompositeFieldContainer[StickerMetadata]: ...
    @property
    def pastParticipants(self) -> RepeatedCompositeFieldContainer[PastParticipants]: ...
    @property
    def callLogRecords(self) -> RepeatedCompositeFieldContainer[CallLogRecord]: ...
    @property
    def phoneNumberToLidMappings(self) -> RepeatedCompositeFieldContainer[PhoneNumberToLIDMapping]: ...
    @property
    def accounts(self) -> RepeatedCompositeFieldContainer[Account]: ...
    def __init__(
        self,
        *,
        syncType: HistorySync.HistorySyncType.ValueType | None = ...,
        conversations: Iterable[Conversation] | None = ...,
        statusV3Messages: Iterable[WebMessageInfo] | None = ...,
        chunkOrder: int | None = ...,
        progress: int | None = ...,
        pushnames: Iterable[Pushname] | None = ...,
        globalSettings: GlobalSettings | None = ...,
        threadIDUserSecret: bytes | None = ...,
        threadDsTimeframeOffset: int | None = ...,
        recentStickers: Iterable[StickerMetadata] | None = ...,
        pastParticipants: Iterable[PastParticipants] | None = ...,
        callLogRecords: Iterable[CallLogRecord] | None = ...,
        aiWaitListState: HistorySync.BotAIWaitListState.ValueType | None = ...,
        phoneNumberToLidMappings: Iterable[PhoneNumberToLIDMapping] | None = ...,
        companionMetaNonce: str | None = ...,
        shareableChatIdentifierEncryptionKey: bytes | None = ...,
        accounts: Iterable[Account] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["aiWaitListState", b"aiWaitListState", "chunkOrder", b"chunkOrder", "companionMetaNonce", b"companionMetaNonce", "globalSettings", b"globalSettings", "progress", b"progress", "shareableChatIdentifierEncryptionKey", b"shareableChatIdentifierEncryptionKey", "syncType", b"syncType", "threadDsTimeframeOffset", b"threadDsTimeframeOffset", "threadIDUserSecret", b"threadIDUserSecret"]) -> bool: ...
    def ClearField(self, field_name: Literal["accounts", b"accounts", "aiWaitListState", b"aiWaitListState", "callLogRecords", b"callLogRecords", "chunkOrder", b"chunkOrder", "companionMetaNonce", b"companionMetaNonce", "conversations", b"conversations", "globalSettings", b"globalSettings", "pastParticipants", b"pastParticipants", "phoneNumberToLidMappings", b"phoneNumberToLidMappings", "progress", b"progress", "pushnames", b"pushnames", "recentStickers", b"recentStickers", "shareableChatIdentifierEncryptionKey", b"shareableChatIdentifierEncryptionKey", "statusV3Messages", b"statusV3Messages", "syncType", b"syncType", "threadDsTimeframeOffset", b"threadDsTimeframeOffset", "threadIDUserSecret", b"threadIDUserSecret"]) -> None: ...

@final
class Conversation(Message):
    DESCRIPTOR: Descriptor

    class _EndOfHistoryTransferType:
        ValueType = NewType("ValueType", int)
        V: typing_extensions.TypeAlias = ValueType

    class _EndOfHistoryTransferTypeEnumTypeWrapper(_EnumTypeWrapper[Conversation._EndOfHistoryTransferType.ValueType], type):
        DESCRIPTOR: EnumDescriptor
        COMPLETE_BUT_MORE_MESSAGES_REMAIN_ON_PRIMARY: Conversation._EndOfHistoryTransferType.ValueType  # 0
        COMPLETE_AND_NO_MORE_MESSAGE_REMAIN_ON_PRIMARY: Conversation._EndOfHistoryTransferType.ValueType  # 1
        COMPLETE_ON_DEMAND_SYNC_BUT_MORE_MSG_REMAIN_ON_PRIMARY: Conversation._EndOfHistoryTransferType.ValueType  # 2

    class EndOfHistoryTransferType(_EndOfHistoryTransferType, metaclass=_EndOfHistoryTransferTypeEnumTypeWrapper): ...
    COMPLETE_BUT_MORE_MESSAGES_REMAIN_ON_PRIMARY: Conversation.EndOfHistoryTransferType.ValueType  # 0
    COMPLETE_AND_NO_MORE_MESSAGE_REMAIN_ON_PRIMARY: Conversation.EndOfHistoryTransferType.ValueType  # 1
    COMPLETE_ON_DEMAND_SYNC_BUT_MORE_MSG_REMAIN_ON_PRIMARY: Conversation.EndOfHistoryTransferType.ValueType  # 2

    ID_FIELD_NUMBER: int
    MESSAGES_FIELD_NUMBER: int
    NEWJID_FIELD_NUMBER: int
    OLDJID_FIELD_NUMBER: int
    LASTMSGTIMESTAMP_FIELD_NUMBER: int
    UNREADCOUNT_FIELD_NUMBER: int
    READONLY_FIELD_NUMBER: int
    ENDOFHISTORYTRANSFER_FIELD_NUMBER: int
    EPHEMERALEXPIRATION_FIELD_NUMBER: int
    EPHEMERALSETTINGTIMESTAMP_FIELD_NUMBER: int
    ENDOFHISTORYTRANSFERTYPE_FIELD_NUMBER: int
    CONVERSATIONTIMESTAMP_FIELD_NUMBER: int
    NAME_FIELD_NUMBER: int
    PHASH_FIELD_NUMBER: int
    NOTSPAM_FIELD_NUMBER: int
    ARCHIVED_FIELD_NUMBER: int
    DISAPPEARINGMODE_FIELD_NUMBER: int
    UNREADMENTIONCOUNT_FIELD_NUMBER: int
    MARKEDASUNREAD_FIELD_NUMBER: int
    PARTICIPANT_FIELD_NUMBER: int
    TCTOKEN_FIELD_NUMBER: int
    TCTOKENTIMESTAMP_FIELD_NUMBER: int
    CONTACTPRIMARYIDENTITYKEY_FIELD_NUMBER: int
    PINNED_FIELD_NUMBER: int
    MUTEENDTIME_FIELD_NUMBER: int
    WALLPAPER_FIELD_NUMBER: int
    MEDIAVISIBILITY_FIELD_NUMBER: int
    TCTOKENSENDERTIMESTAMP_FIELD_NUMBER: int
    SUSPENDED_FIELD_NUMBER: int
    TERMINATED_FIELD_NUMBER: int
    CREATEDAT_FIELD_NUMBER: int
    CREATEDBY_FIELD_NUMBER: int
    DESCRIPTION_FIELD_NUMBER: int
    SUPPORT_FIELD_NUMBER: int
    ISPARENTGROUP_FIELD_NUMBER: int
    PARENTGROUPID_FIELD_NUMBER: int
    ISDEFAULTSUBGROUP_FIELD_NUMBER: int
    DISPLAYNAME_FIELD_NUMBER: int
    PNJID_FIELD_NUMBER: int
    SHAREOWNPN_FIELD_NUMBER: int
    PNHDUPLICATELIDTHREAD_FIELD_NUMBER: int
    LIDJID_FIELD_NUMBER: int
    USERNAME_FIELD_NUMBER: int
    LIDORIGINTYPE_FIELD_NUMBER: int
    COMMENTSCOUNT_FIELD_NUMBER: int
    LOCKED_FIELD_NUMBER: int
    SYSTEMMESSAGETOINSERT_FIELD_NUMBER: int
    CAPICREATEDGROUP_FIELD_NUMBER: int
    ACCOUNTLID_FIELD_NUMBER: int
    LIMITSHARING_FIELD_NUMBER: int
    LIMITSHARINGSETTINGTIMESTAMP_FIELD_NUMBER: int
    LIMITSHARINGTRIGGER_FIELD_NUMBER: int
    LIMITSHARINGINITIATEDBYME_FIELD_NUMBER: int
    ID: str
    newJID: str
    oldJID: str
    lastMsgTimestamp: int
    unreadCount: int
    readOnly: bool
    endOfHistoryTransfer: bool
    ephemeralExpiration: int
    ephemeralSettingTimestamp: int
    endOfHistoryTransferType: Conversation.EndOfHistoryTransferType.ValueType
    conversationTimestamp: int
    name: str
    pHash: str
    notSpam: bool
    archived: bool
    unreadMentionCount: int
    markedAsUnread: bool
    tcToken: bytes
    tcTokenTimestamp: int
    contactPrimaryIdentityKey: bytes
    pinned: int
    muteEndTime: int
    mediaVisibility: MediaVisibility.ValueType
    tcTokenSenderTimestamp: int
    suspended: bool
    terminated: bool
    createdAt: int
    createdBy: str
    description: str
    support: bool
    isParentGroup: bool
    parentGroupID: str
    isDefaultSubgroup: bool
    displayName: str
    pnJID: str
    shareOwnPn: bool
    pnhDuplicateLidThread: bool
    lidJID: str
    username: str
    lidOriginType: str
    commentsCount: int
    locked: bool
    systemMessageToInsert: PrivacySystemMessage.ValueType
    capiCreatedGroup: bool
    accountLid: str
    limitSharing: bool
    limitSharingSettingTimestamp: int
    limitSharingTrigger: LimitSharing.Trigger.ValueType
    limitSharingInitiatedByMe: bool
    @property
    def messages(self) -> RepeatedCompositeFieldContainer[HistorySyncMsg]: ...
    @property
    def disappearingMode(self) -> DisappearingMode: ...
    @property
    def participant(self) -> RepeatedCompositeFieldContainer[GroupParticipant]: ...
    @property
    def wallpaper(self) -> WallpaperSettings: ...
    def __init__(
        self,
        *,
        ID: str | None = ...,
        messages: Iterable[HistorySyncMsg] | None = ...,
        newJID: str | None = ...,
        oldJID: str | None = ...,
        lastMsgTimestamp: int | None = ...,
        unreadCount: int | None = ...,
        readOnly: bool | None = ...,
        endOfHistoryTransfer: bool | None = ...,
        ephemeralExpiration: int | None = ...,
        ephemeralSettingTimestamp: int | None = ...,
        endOfHistoryTransferType: Conversation.EndOfHistoryTransferType.ValueType | None = ...,
        conversationTimestamp: int | None = ...,
        name: str | None = ...,
        pHash: str | None = ...,
        notSpam: bool | None = ...,
        archived: bool | None = ...,
        disappearingMode: DisappearingMode | None = ...,
        unreadMentionCount: int | None = ...,
        markedAsUnread: bool | None = ...,
        participant: Iterable[GroupParticipant] | None = ...,
        tcToken: bytes | None = ...,
        tcTokenTimestamp: int | None = ...,
        contactPrimaryIdentityKey: bytes | None = ...,
        pinned: int | None = ...,
        muteEndTime: int | None = ...,
        wallpaper: WallpaperSettings | None = ...,
        mediaVisibility: MediaVisibility.ValueType | None = ...,
        tcTokenSenderTimestamp: int | None = ...,
        suspended: bool | None = ...,
        terminated: bool | None = ...,
        createdAt: int | None = ...,
        createdBy: str | None = ...,
        description: str | None = ...,
        support: bool | None = ...,
        isParentGroup: bool | None = ...,
        parentGroupID: str | None = ...,
        isDefaultSubgroup: bool | None = ...,
        displayName: str | None = ...,
        pnJID: str | None = ...,
        shareOwnPn: bool | None = ...,
        pnhDuplicateLidThread: bool | None = ...,
        lidJID: str | None = ...,
        username: str | None = ...,
        lidOriginType: str | None = ...,
        commentsCount: int | None = ...,
        locked: bool | None = ...,
        systemMessageToInsert: PrivacySystemMessage.ValueType | None = ...,
        capiCreatedGroup: bool | None = ...,
        accountLid: str | None = ...,
        limitSharing: bool | None = ...,
        limitSharingSettingTimestamp: int | None = ...,
        limitSharingTrigger: LimitSharing.Trigger.ValueType | None = ...,
        limitSharingInitiatedByMe: bool | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["ID", b"ID", "accountLid", b"accountLid", "archived", b"archived", "capiCreatedGroup", b"capiCreatedGroup", "commentsCount", b"commentsCount", "contactPrimaryIdentityKey", b"contactPrimaryIdentityKey", "conversationTimestamp", b"conversationTimestamp", "createdAt", b"createdAt", "createdBy", b"createdBy", "description", b"description", "disappearingMode", b"disappearingMode", "displayName", b"displayName", "endOfHistoryTransfer", b"endOfHistoryTransfer", "endOfHistoryTransferType", b"endOfHistoryTransferType", "ephemeralExpiration", b"ephemeralExpiration", "ephemeralSettingTimestamp", b"ephemeralSettingTimestamp", "isDefaultSubgroup", b"isDefaultSubgroup", "isParentGroup", b"isParentGroup", "lastMsgTimestamp", b"lastMsgTimestamp", "lidJID", b"lidJID", "lidOriginType", b"lidOriginType", "limitSharing", b"limitSharing", "limitSharingInitiatedByMe", b"limitSharingInitiatedByMe", "limitSharingSettingTimestamp", b"limitSharingSettingTimestamp", "limitSharingTrigger", b"limitSharingTrigger", "locked", b"locked", "markedAsUnread", b"markedAsUnread", "mediaVisibility", b"mediaVisibility", "muteEndTime", b"muteEndTime", "name", b"name", "newJID", b"newJID", "notSpam", b"notSpam", "oldJID", b"oldJID", "pHash", b"pHash", "parentGroupID", b"parentGroupID", "pinned", b"pinned", "pnJID", b"pnJID", "pnhDuplicateLidThread", b"pnhDuplicateLidThread", "readOnly", b"readOnly", "shareOwnPn", b"shareOwnPn", "support", b"support", "suspended", b"suspended", "systemMessageToInsert", b"systemMessageToInsert", "tcToken", b"tcToken", "tcTokenSenderTimestamp", b"tcTokenSenderTimestamp", "tcTokenTimestamp", b"tcTokenTimestamp", "terminated", b"terminated", "unreadCount", b"unreadCount", "unreadMentionCount", b"unreadMentionCount", "username", b"username", "wallpaper", b"wallpaper"]) -> bool: ...
    def ClearField(self, field_name: Literal["ID", b"ID", "accountLid", b"accountLid", "archived", b"archived", "capiCreatedGroup", b"capiCreatedGroup", "commentsCount", b"commentsCount", "contactPrimaryIdentityKey", b"contactPrimaryIdentityKey", "conversationTimestamp", b"conversationTimestamp", "createdAt", b"createdAt", "createdBy", b"createdBy", "description", b"description", "disappearingMode", b"disappearingMode", "displayName", b"displayName", "endOfHistoryTransfer", b"endOfHistoryTransfer", "endOfHistoryTransferType", b"endOfHistoryTransferType", "ephemeralExpiration", b"ephemeralExpiration", "ephemeralSettingTimestamp", b"ephemeralSettingTimestamp", "isDefaultSubgroup", b"isDefaultSubgroup", "isParentGroup", b"isParentGroup", "lastMsgTimestamp", b"lastMsgTimestamp", "lidJID", b"lidJID", "lidOriginType", b"lidOriginType", "limitSharing", b"limitSharing", "limitSharingInitiatedByMe", b"limitSharingInitiatedByMe", "limitSharingSettingTimestamp", b"limitSharingSettingTimestamp", "limitSharingTrigger", b"limitSharingTrigger", "locked", b"locked", "markedAsUnread", b"markedAsUnread", "mediaVisibility", b"mediaVisibility", "messages", b"messages", "muteEndTime", b"muteEndTime", "name", b"name", "newJID", b"newJID", "notSpam", b"notSpam", "oldJID", b"oldJID", "pHash", b"pHash", "parentGroupID", b"parentGroupID", "participant", b"participant", "pinned", b"pinned", "pnJID", b"pnJID", "pnhDuplicateLidThread", b"pnhDuplicateLidThread", "readOnly", b"readOnly", "shareOwnPn", b"shareOwnPn", "support", b"support", "suspended", b"suspended", "systemMessageToInsert", b"systemMessageToInsert", "tcToken", b"tcToken", "tcTokenSenderTimestamp", b"tcTokenSenderTimestamp", "tcTokenTimestamp", b"tcTokenTimestamp", "terminated", b"terminated", "unreadCount", b"unreadCount", "unreadMentionCount", b"unreadMentionCount", "username", b"username", "wallpaper", b"wallpaper"]) -> None: ...

@final
class GroupParticipant(Message):
    DESCRIPTOR: Descriptor

    class _Rank:
        ValueType = NewType("ValueType", int)
        V: typing_extensions.TypeAlias = ValueType

    class _RankEnumTypeWrapper(_EnumTypeWrapper[GroupParticipant._Rank.ValueType], type):
        DESCRIPTOR: EnumDescriptor
        REGULAR: GroupParticipant._Rank.ValueType  # 0
        ADMIN: GroupParticipant._Rank.ValueType  # 1
        SUPERADMIN: GroupParticipant._Rank.ValueType  # 2

    class Rank(_Rank, metaclass=_RankEnumTypeWrapper): ...
    REGULAR: GroupParticipant.Rank.ValueType  # 0
    ADMIN: GroupParticipant.Rank.ValueType  # 1
    SUPERADMIN: GroupParticipant.Rank.ValueType  # 2

    USERJID_FIELD_NUMBER: int
    RANK_FIELD_NUMBER: int
    userJID: str
    rank: GroupParticipant.Rank.ValueType
    def __init__(
        self,
        *,
        userJID: str | None = ...,
        rank: GroupParticipant.Rank.ValueType | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["rank", b"rank", "userJID", b"userJID"]) -> bool: ...
    def ClearField(self, field_name: Literal["rank", b"rank", "userJID", b"userJID"]) -> None: ...

@final
class PastParticipant(Message):
    DESCRIPTOR: Descriptor

    class _LeaveReason:
        ValueType = NewType("ValueType", int)
        V: typing_extensions.TypeAlias = ValueType

    class _LeaveReasonEnumTypeWrapper(_EnumTypeWrapper[PastParticipant._LeaveReason.ValueType], type):
        DESCRIPTOR: EnumDescriptor
        LEFT: PastParticipant._LeaveReason.ValueType  # 0
        REMOVED: PastParticipant._LeaveReason.ValueType  # 1

    class LeaveReason(_LeaveReason, metaclass=_LeaveReasonEnumTypeWrapper): ...
    LEFT: PastParticipant.LeaveReason.ValueType  # 0
    REMOVED: PastParticipant.LeaveReason.ValueType  # 1

    USERJID_FIELD_NUMBER: int
    LEAVEREASON_FIELD_NUMBER: int
    LEAVETS_FIELD_NUMBER: int
    userJID: str
    leaveReason: PastParticipant.LeaveReason.ValueType
    leaveTS: int
    def __init__(
        self,
        *,
        userJID: str | None = ...,
        leaveReason: PastParticipant.LeaveReason.ValueType | None = ...,
        leaveTS: int | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["leaveReason", b"leaveReason", "leaveTS", b"leaveTS", "userJID", b"userJID"]) -> bool: ...
    def ClearField(self, field_name: Literal["leaveReason", b"leaveReason", "leaveTS", b"leaveTS", "userJID", b"userJID"]) -> None: ...

@final
class PhoneNumberToLIDMapping(Message):
    DESCRIPTOR: Descriptor

    PNJID_FIELD_NUMBER: int
    LIDJID_FIELD_NUMBER: int
    pnJID: str
    lidJID: str
    def __init__(
        self,
        *,
        pnJID: str | None = ...,
        lidJID: str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["lidJID", b"lidJID", "pnJID", b"pnJID"]) -> bool: ...
    def ClearField(self, field_name: Literal["lidJID", b"lidJID", "pnJID", b"pnJID"]) -> None: ...

@final
class Account(Message):
    DESCRIPTOR: Descriptor

    LID_FIELD_NUMBER: int
    USERNAME_FIELD_NUMBER: int
    COUNTRYCODE_FIELD_NUMBER: int
    ISUSERNAMEDELETED_FIELD_NUMBER: int
    lid: str
    username: str
    countryCode: str
    isUsernameDeleted: bool
    def __init__(
        self,
        *,
        lid: str | None = ...,
        username: str | None = ...,
        countryCode: str | None = ...,
        isUsernameDeleted: bool | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["countryCode", b"countryCode", "isUsernameDeleted", b"isUsernameDeleted", "lid", b"lid", "username", b"username"]) -> bool: ...
    def ClearField(self, field_name: Literal["countryCode", b"countryCode", "isUsernameDeleted", b"isUsernameDeleted", "lid", b"lid", "username", b"username"]) -> None: ...

@final
class HistorySyncMsg(Message):
    DESCRIPTOR: Descriptor

    MESSAGE_FIELD_NUMBER: int
    MSGORDERID_FIELD_NUMBER: int
    msgOrderID: int
    @property
    def message(self) -> WebMessageInfo: ...
    def __init__(
        self,
        *,
        message: WebMessageInfo | None = ...,
        msgOrderID: int | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["message", b"message", "msgOrderID", b"msgOrderID"]) -> bool: ...
    def ClearField(self, field_name: Literal["message", b"message", "msgOrderID", b"msgOrderID"]) -> None: ...

@final
class Pushname(Message):
    DESCRIPTOR: Descriptor

    ID_FIELD_NUMBER: int
    PUSHNAME_FIELD_NUMBER: int
    ID: str
    pushname: str
    def __init__(
        self,
        *,
        ID: str | None = ...,
        pushname: str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["ID", b"ID", "pushname", b"pushname"]) -> bool: ...
    def ClearField(self, field_name: Literal["ID", b"ID", "pushname", b"pushname"]) -> None: ...

@final
class WallpaperSettings(Message):
    DESCRIPTOR: Descriptor

    FILENAME_FIELD_NUMBER: int
    OPACITY_FIELD_NUMBER: int
    filename: str
    opacity: int
    def __init__(
        self,
        *,
        filename: str | None = ...,
        opacity: int | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["filename", b"filename", "opacity", b"opacity"]) -> bool: ...
    def ClearField(self, field_name: Literal["filename", b"filename", "opacity", b"opacity"]) -> None: ...

@final
class GlobalSettings(Message):
    DESCRIPTOR: Descriptor

    LIGHTTHEMEWALLPAPER_FIELD_NUMBER: int
    MEDIAVISIBILITY_FIELD_NUMBER: int
    DARKTHEMEWALLPAPER_FIELD_NUMBER: int
    AUTODOWNLOADWIFI_FIELD_NUMBER: int
    AUTODOWNLOADCELLULAR_FIELD_NUMBER: int
    AUTODOWNLOADROAMING_FIELD_NUMBER: int
    SHOWINDIVIDUALNOTIFICATIONSPREVIEW_FIELD_NUMBER: int
    SHOWGROUPNOTIFICATIONSPREVIEW_FIELD_NUMBER: int
    DISAPPEARINGMODEDURATION_FIELD_NUMBER: int
    DISAPPEARINGMODETIMESTAMP_FIELD_NUMBER: int
    AVATARUSERSETTINGS_FIELD_NUMBER: int
    FONTSIZE_FIELD_NUMBER: int
    SECURITYNOTIFICATIONS_FIELD_NUMBER: int
    AUTOUNARCHIVECHATS_FIELD_NUMBER: int
    VIDEOQUALITYMODE_FIELD_NUMBER: int
    PHOTOQUALITYMODE_FIELD_NUMBER: int
    INDIVIDUALNOTIFICATIONSETTINGS_FIELD_NUMBER: int
    GROUPNOTIFICATIONSETTINGS_FIELD_NUMBER: int
    CHATLOCKSETTINGS_FIELD_NUMBER: int
    CHATDBLIDMIGRATIONTIMESTAMP_FIELD_NUMBER: int
    mediaVisibility: MediaVisibility.ValueType
    showIndividualNotificationsPreview: bool
    showGroupNotificationsPreview: bool
    disappearingModeDuration: int
    disappearingModeTimestamp: int
    fontSize: int
    securityNotifications: bool
    autoUnarchiveChats: bool
    videoQualityMode: int
    photoQualityMode: int
    chatDbLidMigrationTimestamp: int
    @property
    def lightThemeWallpaper(self) -> WallpaperSettings: ...
    @property
    def darkThemeWallpaper(self) -> WallpaperSettings: ...
    @property
    def autoDownloadWiFi(self) -> AutoDownloadSettings: ...
    @property
    def autoDownloadCellular(self) -> AutoDownloadSettings: ...
    @property
    def autoDownloadRoaming(self) -> AutoDownloadSettings: ...
    @property
    def avatarUserSettings(self) -> AvatarUserSettings: ...
    @property
    def individualNotificationSettings(self) -> NotificationSettings: ...
    @property
    def groupNotificationSettings(self) -> NotificationSettings: ...
    @property
    def chatLockSettings(self) -> ChatLockSettings: ...
    def __init__(
        self,
        *,
        lightThemeWallpaper: WallpaperSettings | None = ...,
        mediaVisibility: MediaVisibility.ValueType | None = ...,
        darkThemeWallpaper: WallpaperSettings | None = ...,
        autoDownloadWiFi: AutoDownloadSettings | None = ...,
        autoDownloadCellular: AutoDownloadSettings | None = ...,
        autoDownloadRoaming: AutoDownloadSettings | None = ...,
        showIndividualNotificationsPreview: bool | None = ...,
        showGroupNotificationsPreview: bool | None = ...,
        disappearingModeDuration: int | None = ...,
        disappearingModeTimestamp: int | None = ...,
        avatarUserSettings: AvatarUserSettings | None = ...,
        fontSize: int | None = ...,
        securityNotifications: bool | None = ...,
        autoUnarchiveChats: bool | None = ...,
        videoQualityMode: int | None = ...,
        photoQualityMode: int | None = ...,
        individualNotificationSettings: NotificationSettings | None = ...,
        groupNotificationSettings: NotificationSettings | None = ...,
        chatLockSettings: ChatLockSettings | None = ...,
        chatDbLidMigrationTimestamp: int | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["autoDownloadCellular", b"autoDownloadCellular", "autoDownloadRoaming", b"autoDownloadRoaming", "autoDownloadWiFi", b"autoDownloadWiFi", "autoUnarchiveChats", b"autoUnarchiveChats", "avatarUserSettings", b"avatarUserSettings", "chatDbLidMigrationTimestamp", b"chatDbLidMigrationTimestamp", "chatLockSettings", b"chatLockSettings", "darkThemeWallpaper", b"darkThemeWallpaper", "disappearingModeDuration", b"disappearingModeDuration", "disappearingModeTimestamp", b"disappearingModeTimestamp", "fontSize", b"fontSize", "groupNotificationSettings", b"groupNotificationSettings", "individualNotificationSettings", b"individualNotificationSettings", "lightThemeWallpaper", b"lightThemeWallpaper", "mediaVisibility", b"mediaVisibility", "photoQualityMode", b"photoQualityMode", "securityNotifications", b"securityNotifications", "showGroupNotificationsPreview", b"showGroupNotificationsPreview", "showIndividualNotificationsPreview", b"showIndividualNotificationsPreview", "videoQualityMode", b"videoQualityMode"]) -> bool: ...
    def ClearField(self, field_name: Literal["autoDownloadCellular", b"autoDownloadCellular", "autoDownloadRoaming", b"autoDownloadRoaming", "autoDownloadWiFi", b"autoDownloadWiFi", "autoUnarchiveChats", b"autoUnarchiveChats", "avatarUserSettings", b"avatarUserSettings", "chatDbLidMigrationTimestamp", b"chatDbLidMigrationTimestamp", "chatLockSettings", b"chatLockSettings", "darkThemeWallpaper", b"darkThemeWallpaper", "disappearingModeDuration", b"disappearingModeDuration", "disappearingModeTimestamp", b"disappearingModeTimestamp", "fontSize", b"fontSize", "groupNotificationSettings", b"groupNotificationSettings", "individualNotificationSettings", b"individualNotificationSettings", "lightThemeWallpaper", b"lightThemeWallpaper", "mediaVisibility", b"mediaVisibility", "photoQualityMode", b"photoQualityMode", "securityNotifications", b"securityNotifications", "showGroupNotificationsPreview", b"showGroupNotificationsPreview", "showIndividualNotificationsPreview", b"showIndividualNotificationsPreview", "videoQualityMode", b"videoQualityMode"]) -> None: ...

@final
class AutoDownloadSettings(Message):
    DESCRIPTOR: Descriptor

    DOWNLOADIMAGES_FIELD_NUMBER: int
    DOWNLOADAUDIO_FIELD_NUMBER: int
    DOWNLOADVIDEO_FIELD_NUMBER: int
    DOWNLOADDOCUMENTS_FIELD_NUMBER: int
    downloadImages: bool
    downloadAudio: bool
    downloadVideo: bool
    downloadDocuments: bool
    def __init__(
        self,
        *,
        downloadImages: bool | None = ...,
        downloadAudio: bool | None = ...,
        downloadVideo: bool | None = ...,
        downloadDocuments: bool | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["downloadAudio", b"downloadAudio", "downloadDocuments", b"downloadDocuments", "downloadImages", b"downloadImages", "downloadVideo", b"downloadVideo"]) -> bool: ...
    def ClearField(self, field_name: Literal["downloadAudio", b"downloadAudio", "downloadDocuments", b"downloadDocuments", "downloadImages", b"downloadImages", "downloadVideo", b"downloadVideo"]) -> None: ...

@final
class StickerMetadata(Message):
    DESCRIPTOR: Descriptor

    URL_FIELD_NUMBER: int
    FILESHA256_FIELD_NUMBER: int
    FILEENCSHA256_FIELD_NUMBER: int
    MEDIAKEY_FIELD_NUMBER: int
    MIMETYPE_FIELD_NUMBER: int
    HEIGHT_FIELD_NUMBER: int
    WIDTH_FIELD_NUMBER: int
    DIRECTPATH_FIELD_NUMBER: int
    FILELENGTH_FIELD_NUMBER: int
    WEIGHT_FIELD_NUMBER: int
    LASTSTICKERSENTTS_FIELD_NUMBER: int
    ISLOTTIE_FIELD_NUMBER: int
    URL: str
    fileSHA256: bytes
    fileEncSHA256: bytes
    mediaKey: bytes
    mimetype: str
    height: int
    width: int
    directPath: str
    fileLength: int
    weight: float
    lastStickerSentTS: int
    isLottie: bool
    def __init__(
        self,
        *,
        URL: str | None = ...,
        fileSHA256: bytes | None = ...,
        fileEncSHA256: bytes | None = ...,
        mediaKey: bytes | None = ...,
        mimetype: str | None = ...,
        height: int | None = ...,
        width: int | None = ...,
        directPath: str | None = ...,
        fileLength: int | None = ...,
        weight: float | None = ...,
        lastStickerSentTS: int | None = ...,
        isLottie: bool | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["URL", b"URL", "directPath", b"directPath", "fileEncSHA256", b"fileEncSHA256", "fileLength", b"fileLength", "fileSHA256", b"fileSHA256", "height", b"height", "isLottie", b"isLottie", "lastStickerSentTS", b"lastStickerSentTS", "mediaKey", b"mediaKey", "mimetype", b"mimetype", "weight", b"weight", "width", b"width"]) -> bool: ...
    def ClearField(self, field_name: Literal["URL", b"URL", "directPath", b"directPath", "fileEncSHA256", b"fileEncSHA256", "fileLength", b"fileLength", "fileSHA256", b"fileSHA256", "height", b"height", "isLottie", b"isLottie", "lastStickerSentTS", b"lastStickerSentTS", "mediaKey", b"mediaKey", "mimetype", b"mimetype", "weight", b"weight", "width", b"width"]) -> None: ...

@final
class PastParticipants(Message):
    DESCRIPTOR: Descriptor

    GROUPJID_FIELD_NUMBER: int
    PASTPARTICIPANTS_FIELD_NUMBER: int
    groupJID: str
    @property
    def pastParticipants(self) -> RepeatedCompositeFieldContainer[PastParticipant]: ...
    def __init__(
        self,
        *,
        groupJID: str | None = ...,
        pastParticipants: Iterable[PastParticipant] | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["groupJID", b"groupJID"]) -> bool: ...
    def ClearField(self, field_name: Literal["groupJID", b"groupJID", "pastParticipants", b"pastParticipants"]) -> None: ...

@final
class AvatarUserSettings(Message):
    DESCRIPTOR: Descriptor

    FBID_FIELD_NUMBER: int
    PASSWORD_FIELD_NUMBER: int
    FBID: str
    password: str
    def __init__(
        self,
        *,
        FBID: str | None = ...,
        password: str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["FBID", b"FBID", "password", b"password"]) -> bool: ...
    def ClearField(self, field_name: Literal["FBID", b"FBID", "password", b"password"]) -> None: ...

@final
class NotificationSettings(Message):
    DESCRIPTOR: Descriptor

    MESSAGEVIBRATE_FIELD_NUMBER: int
    MESSAGEPOPUP_FIELD_NUMBER: int
    MESSAGELIGHT_FIELD_NUMBER: int
    LOWPRIORITYNOTIFICATIONS_FIELD_NUMBER: int
    REACTIONSMUTED_FIELD_NUMBER: int
    CALLVIBRATE_FIELD_NUMBER: int
    messageVibrate: str
    messagePopup: str
    messageLight: str
    lowPriorityNotifications: bool
    reactionsMuted: bool
    callVibrate: str
    def __init__(
        self,
        *,
        messageVibrate: str | None = ...,
        messagePopup: str | None = ...,
        messageLight: str | None = ...,
        lowPriorityNotifications: bool | None = ...,
        reactionsMuted: bool | None = ...,
        callVibrate: str | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["callVibrate", b"callVibrate", "lowPriorityNotifications", b"lowPriorityNotifications", "messageLight", b"messageLight", "messagePopup", b"messagePopup", "messageVibrate", b"messageVibrate", "reactionsMuted", b"reactionsMuted"]) -> bool: ...
    def ClearField(self, field_name: Literal["callVibrate", b"callVibrate", "lowPriorityNotifications", b"lowPriorityNotifications", "messageLight", b"messageLight", "messagePopup", b"messagePopup", "messageVibrate", b"messageVibrate", "reactionsMuted", b"reactionsMuted"]) -> None: ...
