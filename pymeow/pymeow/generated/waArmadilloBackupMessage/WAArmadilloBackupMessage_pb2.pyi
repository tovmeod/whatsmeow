"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

from builtins import (
    bool,
    bytes,
    int,
    str,
)
from google.protobuf.descriptor import (
    Descriptor,
    FileDescriptor,
)
from google.protobuf.message import (
    Message,
)
from typing import (
    Literal,
    final,
)
from ..waArmadilloBackupCommon.WAArmadilloBackupCommon_pb2 import (
    Subprotocol,
)

DESCRIPTOR: FileDescriptor

@final
class BackupMessage(Message):
    DESCRIPTOR: Descriptor

    @final
    class Metadata(Message):
        DESCRIPTOR: Descriptor

        @final
        class FrankingMetadata(Message):
            DESCRIPTOR: Descriptor

            FRANKINGTAG_FIELD_NUMBER: int
            REPORTINGTAG_FIELD_NUMBER: int
            frankingTag: bytes
            reportingTag: bytes
            def __init__(
                self,
                *,
                frankingTag: bytes | None = ...,
                reportingTag: bytes | None = ...,
            ) -> None: ...
            def HasField(self, field_name: Literal["frankingTag", b"frankingTag", "reportingTag", b"reportingTag"]) -> bool: ...
            def ClearField(self, field_name: Literal["frankingTag", b"frankingTag", "reportingTag", b"reportingTag"]) -> None: ...

        SENDERID_FIELD_NUMBER: int
        MESSAGEID_FIELD_NUMBER: int
        TIMESTAMPMS_FIELD_NUMBER: int
        FRANKINGMETADATA_FIELD_NUMBER: int
        PAYLOADVERSION_FIELD_NUMBER: int
        FUTUREPROOFBEHAVIOR_FIELD_NUMBER: int
        THREADTYPETAG_FIELD_NUMBER: int
        senderID: str
        messageID: str
        timestampMS: int
        payloadVersion: int
        futureProofBehavior: int
        threadTypeTag: int
        @property
        def frankingMetadata(self) -> BackupMessage.Metadata.FrankingMetadata: ...
        def __init__(
            self,
            *,
            senderID: str | None = ...,
            messageID: str | None = ...,
            timestampMS: int | None = ...,
            frankingMetadata: BackupMessage.Metadata.FrankingMetadata | None = ...,
            payloadVersion: int | None = ...,
            futureProofBehavior: int | None = ...,
            threadTypeTag: int | None = ...,
        ) -> None: ...
        def HasField(self, field_name: Literal["frankingMetadata", b"frankingMetadata", "futureProofBehavior", b"futureProofBehavior", "messageID", b"messageID", "payloadVersion", b"payloadVersion", "senderID", b"senderID", "threadTypeTag", b"threadTypeTag", "timestampMS", b"timestampMS"]) -> bool: ...
        def ClearField(self, field_name: Literal["frankingMetadata", b"frankingMetadata", "futureProofBehavior", b"futureProofBehavior", "messageID", b"messageID", "payloadVersion", b"payloadVersion", "senderID", b"senderID", "threadTypeTag", b"threadTypeTag", "timestampMS", b"timestampMS"]) -> None: ...

    ENCRYPTEDTRANSPORTMESSAGE_FIELD_NUMBER: int
    ENCRYPTEDTRANSPORTEVENT_FIELD_NUMBER: int
    ENCRYPTEDTRANSPORTLOCALLYTRANSFORMEDMESSAGE_FIELD_NUMBER: int
    MITRANSPORTADMINMESSAGE_FIELD_NUMBER: int
    METADATA_FIELD_NUMBER: int
    encryptedTransportMessage: bytes
    @property
    def encryptedTransportEvent(self) -> Subprotocol: ...
    @property
    def encryptedTransportLocallyTransformedMessage(self) -> Subprotocol: ...
    @property
    def miTransportAdminMessage(self) -> Subprotocol: ...
    @property
    def metadata(self) -> BackupMessage.Metadata: ...
    def __init__(
        self,
        *,
        encryptedTransportMessage: bytes | None = ...,
        encryptedTransportEvent: Subprotocol | None = ...,
        encryptedTransportLocallyTransformedMessage: Subprotocol | None = ...,
        miTransportAdminMessage: Subprotocol | None = ...,
        metadata: BackupMessage.Metadata | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["encryptedTransportEvent", b"encryptedTransportEvent", "encryptedTransportLocallyTransformedMessage", b"encryptedTransportLocallyTransformedMessage", "encryptedTransportMessage", b"encryptedTransportMessage", "metadata", b"metadata", "miTransportAdminMessage", b"miTransportAdminMessage", "payload", b"payload"]) -> bool: ...
    def ClearField(self, field_name: Literal["encryptedTransportEvent", b"encryptedTransportEvent", "encryptedTransportLocallyTransformedMessage", b"encryptedTransportLocallyTransformedMessage", "encryptedTransportMessage", b"encryptedTransportMessage", "metadata", b"metadata", "miTransportAdminMessage", b"miTransportAdminMessage", "payload", b"payload"]) -> None: ...
    def WhichOneof(self, oneof_group: Literal["payload", b"payload"]) -> Literal["encryptedTransportMessage", "encryptedTransportEvent", "encryptedTransportLocallyTransformedMessage", "miTransportAdminMessage"] | None: ...
