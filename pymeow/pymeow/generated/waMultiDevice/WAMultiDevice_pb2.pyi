"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

from builtins import (
    bool,
    bytes,
    int,
)
from collections.abc import (
    Iterable,
)
from google.protobuf.descriptor import (
    Descriptor,
    FileDescriptor,
)
from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer,
    RepeatedScalarFieldContainer,
)
from google.protobuf.message import (
    Message,
)
from typing import (
    Literal,
    final,
)

DESCRIPTOR: FileDescriptor

@final
class MultiDevice(Message):
    DESCRIPTOR: Descriptor

    @final
    class Metadata(Message):
        DESCRIPTOR: Descriptor

        def __init__(
            self,
        ) -> None: ...

    @final
    class Payload(Message):
        DESCRIPTOR: Descriptor

        APPLICATIONDATA_FIELD_NUMBER: int
        SIGNAL_FIELD_NUMBER: int
        @property
        def applicationData(self) -> MultiDevice.ApplicationData: ...
        @property
        def signal(self) -> MultiDevice.Signal: ...
        def __init__(
            self,
            *,
            applicationData: MultiDevice.ApplicationData | None = ...,
            signal: MultiDevice.Signal | None = ...,
        ) -> None: ...
        def HasField(self, field_name: Literal["applicationData", b"applicationData", "payload", b"payload", "signal", b"signal"]) -> bool: ...
        def ClearField(self, field_name: Literal["applicationData", b"applicationData", "payload", b"payload", "signal", b"signal"]) -> None: ...
        def WhichOneof(self, oneof_group: Literal["payload", b"payload"]) -> Literal["applicationData", "signal"] | None: ...

    @final
    class ApplicationData(Message):
        DESCRIPTOR: Descriptor

        @final
        class AppStateSyncKeyRequestMessage(Message):
            DESCRIPTOR: Descriptor

            KEYIDS_FIELD_NUMBER: int
            @property
            def keyIDs(self) -> RepeatedCompositeFieldContainer[MultiDevice.ApplicationData.AppStateSyncKeyId]: ...
            def __init__(
                self,
                *,
                keyIDs: Iterable[MultiDevice.ApplicationData.AppStateSyncKeyId] | None = ...,
            ) -> None: ...
            def ClearField(self, field_name: Literal["keyIDs", b"keyIDs"]) -> None: ...

        @final
        class AppStateSyncKeyShareMessage(Message):
            DESCRIPTOR: Descriptor

            KEYS_FIELD_NUMBER: int
            @property
            def keys(self) -> RepeatedCompositeFieldContainer[MultiDevice.ApplicationData.AppStateSyncKey]: ...
            def __init__(
                self,
                *,
                keys: Iterable[MultiDevice.ApplicationData.AppStateSyncKey] | None = ...,
            ) -> None: ...
            def ClearField(self, field_name: Literal["keys", b"keys"]) -> None: ...

        @final
        class AppStateSyncKey(Message):
            DESCRIPTOR: Descriptor

            @final
            class AppStateSyncKeyData(Message):
                DESCRIPTOR: Descriptor

                @final
                class AppStateSyncKeyFingerprint(Message):
                    DESCRIPTOR: Descriptor

                    RAWID_FIELD_NUMBER: int
                    CURRENTINDEX_FIELD_NUMBER: int
                    DEVICEINDEXES_FIELD_NUMBER: int
                    rawID: int
                    currentIndex: int
                    @property
                    def deviceIndexes(self) -> RepeatedScalarFieldContainer[int]: ...
                    def __init__(
                        self,
                        *,
                        rawID: int | None = ...,
                        currentIndex: int | None = ...,
                        deviceIndexes: Iterable[int] | None = ...,
                    ) -> None: ...
                    def HasField(self, field_name: Literal["currentIndex", b"currentIndex", "rawID", b"rawID"]) -> bool: ...
                    def ClearField(self, field_name: Literal["currentIndex", b"currentIndex", "deviceIndexes", b"deviceIndexes", "rawID", b"rawID"]) -> None: ...

                KEYDATA_FIELD_NUMBER: int
                FINGERPRINT_FIELD_NUMBER: int
                TIMESTAMP_FIELD_NUMBER: int
                keyData: bytes
                timestamp: int
                @property
                def fingerprint(self) -> MultiDevice.ApplicationData.AppStateSyncKey.AppStateSyncKeyData.AppStateSyncKeyFingerprint: ...
                def __init__(
                    self,
                    *,
                    keyData: bytes | None = ...,
                    fingerprint: MultiDevice.ApplicationData.AppStateSyncKey.AppStateSyncKeyData.AppStateSyncKeyFingerprint | None = ...,
                    timestamp: int | None = ...,
                ) -> None: ...
                def HasField(self, field_name: Literal["fingerprint", b"fingerprint", "keyData", b"keyData", "timestamp", b"timestamp"]) -> bool: ...
                def ClearField(self, field_name: Literal["fingerprint", b"fingerprint", "keyData", b"keyData", "timestamp", b"timestamp"]) -> None: ...

            KEYID_FIELD_NUMBER: int
            KEYDATA_FIELD_NUMBER: int
            @property
            def keyID(self) -> MultiDevice.ApplicationData.AppStateSyncKeyId: ...
            @property
            def keyData(self) -> MultiDevice.ApplicationData.AppStateSyncKey.AppStateSyncKeyData: ...
            def __init__(
                self,
                *,
                keyID: MultiDevice.ApplicationData.AppStateSyncKeyId | None = ...,
                keyData: MultiDevice.ApplicationData.AppStateSyncKey.AppStateSyncKeyData | None = ...,
            ) -> None: ...
            def HasField(self, field_name: Literal["keyData", b"keyData", "keyID", b"keyID"]) -> bool: ...
            def ClearField(self, field_name: Literal["keyData", b"keyData", "keyID", b"keyID"]) -> None: ...

        @final
        class AppStateSyncKeyId(Message):
            DESCRIPTOR: Descriptor

            KEYID_FIELD_NUMBER: int
            keyID: bytes
            def __init__(
                self,
                *,
                keyID: bytes | None = ...,
            ) -> None: ...
            def HasField(self, field_name: Literal["keyID", b"keyID"]) -> bool: ...
            def ClearField(self, field_name: Literal["keyID", b"keyID"]) -> None: ...

        APPSTATESYNCKEYSHARE_FIELD_NUMBER: int
        APPSTATESYNCKEYREQUEST_FIELD_NUMBER: int
        @property
        def appStateSyncKeyShare(self) -> MultiDevice.ApplicationData.AppStateSyncKeyShareMessage: ...
        @property
        def appStateSyncKeyRequest(self) -> MultiDevice.ApplicationData.AppStateSyncKeyRequestMessage: ...
        def __init__(
            self,
            *,
            appStateSyncKeyShare: MultiDevice.ApplicationData.AppStateSyncKeyShareMessage | None = ...,
            appStateSyncKeyRequest: MultiDevice.ApplicationData.AppStateSyncKeyRequestMessage | None = ...,
        ) -> None: ...
        def HasField(self, field_name: Literal["appStateSyncKeyRequest", b"appStateSyncKeyRequest", "appStateSyncKeyShare", b"appStateSyncKeyShare", "applicationData", b"applicationData"]) -> bool: ...
        def ClearField(self, field_name: Literal["appStateSyncKeyRequest", b"appStateSyncKeyRequest", "appStateSyncKeyShare", b"appStateSyncKeyShare", "applicationData", b"applicationData"]) -> None: ...
        def WhichOneof(self, oneof_group: Literal["applicationData", b"applicationData"]) -> Literal["appStateSyncKeyShare", "appStateSyncKeyRequest"] | None: ...

    @final
    class Signal(Message):
        DESCRIPTOR: Descriptor

        def __init__(
            self,
        ) -> None: ...

    PAYLOAD_FIELD_NUMBER: int
    METADATA_FIELD_NUMBER: int
    @property
    def payload(self) -> MultiDevice.Payload: ...
    @property
    def metadata(self) -> MultiDevice.Metadata: ...
    def __init__(
        self,
        *,
        payload: MultiDevice.Payload | None = ...,
        metadata: MultiDevice.Metadata | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["metadata", b"metadata", "payload", b"payload"]) -> bool: ...
    def ClearField(self, field_name: Literal["metadata", b"metadata", "payload", b"payload"]) -> None: ...
