"""
@generated by mypy-protobuf.  Do not edit manually!
isort:skip_file
"""

import sys

if sys.version_info >= (3, 10):
    import typing as typing_extensions
else:
    import typing_extensions
from builtins import (
    bool,
    bytes,
    float,
    int,
    str,
    type,
)
from collections.abc import (
    Iterable,
)
from google.protobuf.descriptor import (
    Descriptor,
    EnumDescriptor,
    FileDescriptor,
)
from google.protobuf.internal.containers import (
    RepeatedCompositeFieldContainer,
    RepeatedScalarFieldContainer,
)
from google.protobuf.internal.enum_type_wrapper import (
    _EnumTypeWrapper,
)
from google.protobuf.message import (
    Message,
)
from typing import (
    Literal,
    NewType,
    final,
)
from ..waCommon.WACommon_pb2 import (
    MessageText,
)

DESCRIPTOR: FileDescriptor

@final
class WAMediaTransport(Message):
    DESCRIPTOR: Descriptor

    @final
    class Ancillary(Message):
        DESCRIPTOR: Descriptor

        @final
        class Thumbnail(Message):
            DESCRIPTOR: Descriptor

            @final
            class DownloadableThumbnail(Message):
                DESCRIPTOR: Descriptor

                FILESHA256_FIELD_NUMBER: int
                FILEENCSHA256_FIELD_NUMBER: int
                DIRECTPATH_FIELD_NUMBER: int
                MEDIAKEY_FIELD_NUMBER: int
                MEDIAKEYTIMESTAMP_FIELD_NUMBER: int
                OBJECTID_FIELD_NUMBER: int
                THUMBNAILSCANSSIDECAR_FIELD_NUMBER: int
                THUMBNAILSCANLENGTHS_FIELD_NUMBER: int
                fileSHA256: bytes
                fileEncSHA256: bytes
                directPath: str
                mediaKey: bytes
                mediaKeyTimestamp: int
                objectID: str
                thumbnailScansSidecar: bytes
                @property
                def thumbnailScanLengths(self) -> RepeatedScalarFieldContainer[int]: ...
                def __init__(
                    self,
                    *,
                    fileSHA256: bytes | None = ...,
                    fileEncSHA256: bytes | None = ...,
                    directPath: str | None = ...,
                    mediaKey: bytes | None = ...,
                    mediaKeyTimestamp: int | None = ...,
                    objectID: str | None = ...,
                    thumbnailScansSidecar: bytes | None = ...,
                    thumbnailScanLengths: Iterable[int] | None = ...,
                ) -> None: ...
                def HasField(self, field_name: Literal["directPath", b"directPath", "fileEncSHA256", b"fileEncSHA256", "fileSHA256", b"fileSHA256", "mediaKey", b"mediaKey", "mediaKeyTimestamp", b"mediaKeyTimestamp", "objectID", b"objectID", "thumbnailScansSidecar", b"thumbnailScansSidecar"]) -> bool: ...
                def ClearField(self, field_name: Literal["directPath", b"directPath", "fileEncSHA256", b"fileEncSHA256", "fileSHA256", b"fileSHA256", "mediaKey", b"mediaKey", "mediaKeyTimestamp", b"mediaKeyTimestamp", "objectID", b"objectID", "thumbnailScanLengths", b"thumbnailScanLengths", "thumbnailScansSidecar", b"thumbnailScansSidecar"]) -> None: ...

            JPEGTHUMBNAIL_FIELD_NUMBER: int
            DOWNLOADABLETHUMBNAIL_FIELD_NUMBER: int
            THUMBNAILWIDTH_FIELD_NUMBER: int
            THUMBNAILHEIGHT_FIELD_NUMBER: int
            JPEGThumbnail: bytes
            thumbnailWidth: int
            thumbnailHeight: int
            @property
            def downloadableThumbnail(self) -> WAMediaTransport.Ancillary.Thumbnail.DownloadableThumbnail: ...
            def __init__(
                self,
                *,
                JPEGThumbnail: bytes | None = ...,
                downloadableThumbnail: WAMediaTransport.Ancillary.Thumbnail.DownloadableThumbnail | None = ...,
                thumbnailWidth: int | None = ...,
                thumbnailHeight: int | None = ...,
            ) -> None: ...
            def HasField(self, field_name: Literal["JPEGThumbnail", b"JPEGThumbnail", "downloadableThumbnail", b"downloadableThumbnail", "thumbnailHeight", b"thumbnailHeight", "thumbnailWidth", b"thumbnailWidth"]) -> bool: ...
            def ClearField(self, field_name: Literal["JPEGThumbnail", b"JPEGThumbnail", "downloadableThumbnail", b"downloadableThumbnail", "thumbnailHeight", b"thumbnailHeight", "thumbnailWidth", b"thumbnailWidth"]) -> None: ...

        FILELENGTH_FIELD_NUMBER: int
        MIMETYPE_FIELD_NUMBER: int
        THUMBNAIL_FIELD_NUMBER: int
        OBJECTID_FIELD_NUMBER: int
        fileLength: int
        mimetype: str
        objectID: str
        @property
        def thumbnail(self) -> WAMediaTransport.Ancillary.Thumbnail: ...
        def __init__(
            self,
            *,
            fileLength: int | None = ...,
            mimetype: str | None = ...,
            thumbnail: WAMediaTransport.Ancillary.Thumbnail | None = ...,
            objectID: str | None = ...,
        ) -> None: ...
        def HasField(self, field_name: Literal["fileLength", b"fileLength", "mimetype", b"mimetype", "objectID", b"objectID", "thumbnail", b"thumbnail"]) -> bool: ...
        def ClearField(self, field_name: Literal["fileLength", b"fileLength", "mimetype", b"mimetype", "objectID", b"objectID", "thumbnail", b"thumbnail"]) -> None: ...

    @final
    class Integral(Message):
        DESCRIPTOR: Descriptor

        FILESHA256_FIELD_NUMBER: int
        MEDIAKEY_FIELD_NUMBER: int
        FILEENCSHA256_FIELD_NUMBER: int
        DIRECTPATH_FIELD_NUMBER: int
        MEDIAKEYTIMESTAMP_FIELD_NUMBER: int
        fileSHA256: bytes
        mediaKey: bytes
        fileEncSHA256: bytes
        directPath: str
        mediaKeyTimestamp: int
        def __init__(
            self,
            *,
            fileSHA256: bytes | None = ...,
            mediaKey: bytes | None = ...,
            fileEncSHA256: bytes | None = ...,
            directPath: str | None = ...,
            mediaKeyTimestamp: int | None = ...,
        ) -> None: ...
        def HasField(self, field_name: Literal["directPath", b"directPath", "fileEncSHA256", b"fileEncSHA256", "fileSHA256", b"fileSHA256", "mediaKey", b"mediaKey", "mediaKeyTimestamp", b"mediaKeyTimestamp"]) -> bool: ...
        def ClearField(self, field_name: Literal["directPath", b"directPath", "fileEncSHA256", b"fileEncSHA256", "fileSHA256", b"fileSHA256", "mediaKey", b"mediaKey", "mediaKeyTimestamp", b"mediaKeyTimestamp"]) -> None: ...

    INTEGRAL_FIELD_NUMBER: int
    ANCILLARY_FIELD_NUMBER: int
    @property
    def integral(self) -> WAMediaTransport.Integral: ...
    @property
    def ancillary(self) -> WAMediaTransport.Ancillary: ...
    def __init__(
        self,
        *,
        integral: WAMediaTransport.Integral | None = ...,
        ancillary: WAMediaTransport.Ancillary | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["ancillary", b"ancillary", "integral", b"integral"]) -> bool: ...
    def ClearField(self, field_name: Literal["ancillary", b"ancillary", "integral", b"integral"]) -> None: ...

@final
class ImageTransport(Message):
    DESCRIPTOR: Descriptor

    @final
    class Ancillary(Message):
        DESCRIPTOR: Descriptor

        class _HdType:
            ValueType = NewType("ValueType", int)
            V: typing_extensions.TypeAlias = ValueType

        class _HdTypeEnumTypeWrapper(_EnumTypeWrapper[ImageTransport.Ancillary._HdType.ValueType], type):
            DESCRIPTOR: EnumDescriptor
            NONE: ImageTransport.Ancillary._HdType.ValueType  # 0
            LQ_4K: ImageTransport.Ancillary._HdType.ValueType  # 1
            HQ_4K: ImageTransport.Ancillary._HdType.ValueType  # 2

        class HdType(_HdType, metaclass=_HdTypeEnumTypeWrapper): ...
        NONE: ImageTransport.Ancillary.HdType.ValueType  # 0
        LQ_4K: ImageTransport.Ancillary.HdType.ValueType  # 1
        HQ_4K: ImageTransport.Ancillary.HdType.ValueType  # 2

        HEIGHT_FIELD_NUMBER: int
        WIDTH_FIELD_NUMBER: int
        SCANSSIDECAR_FIELD_NUMBER: int
        SCANLENGTHS_FIELD_NUMBER: int
        MIDQUALITYFILESHA256_FIELD_NUMBER: int
        HDTYPE_FIELD_NUMBER: int
        MEMORIESCONCEPTSCORES_FIELD_NUMBER: int
        MEMORIESCONCEPTIDS_FIELD_NUMBER: int
        height: int
        width: int
        scansSidecar: bytes
        midQualityFileSHA256: bytes
        hdType: ImageTransport.Ancillary.HdType.ValueType
        @property
        def scanLengths(self) -> RepeatedScalarFieldContainer[int]: ...
        @property
        def memoriesConceptScores(self) -> RepeatedScalarFieldContainer[float]: ...
        @property
        def memoriesConceptIDs(self) -> RepeatedScalarFieldContainer[int]: ...
        def __init__(
            self,
            *,
            height: int | None = ...,
            width: int | None = ...,
            scansSidecar: bytes | None = ...,
            scanLengths: Iterable[int] | None = ...,
            midQualityFileSHA256: bytes | None = ...,
            hdType: ImageTransport.Ancillary.HdType.ValueType | None = ...,
            memoriesConceptScores: Iterable[float] | None = ...,
            memoriesConceptIDs: Iterable[int] | None = ...,
        ) -> None: ...
        def HasField(self, field_name: Literal["hdType", b"hdType", "height", b"height", "midQualityFileSHA256", b"midQualityFileSHA256", "scansSidecar", b"scansSidecar", "width", b"width"]) -> bool: ...
        def ClearField(self, field_name: Literal["hdType", b"hdType", "height", b"height", "memoriesConceptIDs", b"memoriesConceptIDs", "memoriesConceptScores", b"memoriesConceptScores", "midQualityFileSHA256", b"midQualityFileSHA256", "scanLengths", b"scanLengths", "scansSidecar", b"scansSidecar", "width", b"width"]) -> None: ...

    @final
    class Integral(Message):
        DESCRIPTOR: Descriptor

        TRANSPORT_FIELD_NUMBER: int
        @property
        def transport(self) -> WAMediaTransport: ...
        def __init__(
            self,
            *,
            transport: WAMediaTransport | None = ...,
        ) -> None: ...
        def HasField(self, field_name: Literal["transport", b"transport"]) -> bool: ...
        def ClearField(self, field_name: Literal["transport", b"transport"]) -> None: ...

    INTEGRAL_FIELD_NUMBER: int
    ANCILLARY_FIELD_NUMBER: int
    @property
    def integral(self) -> ImageTransport.Integral: ...
    @property
    def ancillary(self) -> ImageTransport.Ancillary: ...
    def __init__(
        self,
        *,
        integral: ImageTransport.Integral | None = ...,
        ancillary: ImageTransport.Ancillary | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["ancillary", b"ancillary", "integral", b"integral"]) -> bool: ...
    def ClearField(self, field_name: Literal["ancillary", b"ancillary", "integral", b"integral"]) -> None: ...

@final
class VideoTransport(Message):
    DESCRIPTOR: Descriptor

    @final
    class Ancillary(Message):
        DESCRIPTOR: Descriptor

        class _Attribution:
            ValueType = NewType("ValueType", int)
            V: typing_extensions.TypeAlias = ValueType

        class _AttributionEnumTypeWrapper(_EnumTypeWrapper[VideoTransport.Ancillary._Attribution.ValueType], type):
            DESCRIPTOR: EnumDescriptor
            NONE: VideoTransport.Ancillary._Attribution.ValueType  # 0
            GIPHY: VideoTransport.Ancillary._Attribution.ValueType  # 1
            TENOR: VideoTransport.Ancillary._Attribution.ValueType  # 2

        class Attribution(_Attribution, metaclass=_AttributionEnumTypeWrapper): ...
        NONE: VideoTransport.Ancillary.Attribution.ValueType  # 0
        GIPHY: VideoTransport.Ancillary.Attribution.ValueType  # 1
        TENOR: VideoTransport.Ancillary.Attribution.ValueType  # 2

        SECONDS_FIELD_NUMBER: int
        CAPTION_FIELD_NUMBER: int
        GIFPLAYBACK_FIELD_NUMBER: int
        HEIGHT_FIELD_NUMBER: int
        WIDTH_FIELD_NUMBER: int
        SIDECAR_FIELD_NUMBER: int
        GIFATTRIBUTION_FIELD_NUMBER: int
        ACCESSIBILITYLABEL_FIELD_NUMBER: int
        ISHD_FIELD_NUMBER: int
        seconds: int
        gifPlayback: bool
        height: int
        width: int
        sidecar: bytes
        gifAttribution: VideoTransport.Ancillary.Attribution.ValueType
        accessibilityLabel: str
        isHd: bool
        @property
        def caption(self) -> MessageText: ...
        def __init__(
            self,
            *,
            seconds: int | None = ...,
            caption: MessageText | None = ...,
            gifPlayback: bool | None = ...,
            height: int | None = ...,
            width: int | None = ...,
            sidecar: bytes | None = ...,
            gifAttribution: VideoTransport.Ancillary.Attribution.ValueType | None = ...,
            accessibilityLabel: str | None = ...,
            isHd: bool | None = ...,
        ) -> None: ...
        def HasField(self, field_name: Literal["accessibilityLabel", b"accessibilityLabel", "caption", b"caption", "gifAttribution", b"gifAttribution", "gifPlayback", b"gifPlayback", "height", b"height", "isHd", b"isHd", "seconds", b"seconds", "sidecar", b"sidecar", "width", b"width"]) -> bool: ...
        def ClearField(self, field_name: Literal["accessibilityLabel", b"accessibilityLabel", "caption", b"caption", "gifAttribution", b"gifAttribution", "gifPlayback", b"gifPlayback", "height", b"height", "isHd", b"isHd", "seconds", b"seconds", "sidecar", b"sidecar", "width", b"width"]) -> None: ...

    @final
    class Integral(Message):
        DESCRIPTOR: Descriptor

        TRANSPORT_FIELD_NUMBER: int
        @property
        def transport(self) -> WAMediaTransport: ...
        def __init__(
            self,
            *,
            transport: WAMediaTransport | None = ...,
        ) -> None: ...
        def HasField(self, field_name: Literal["transport", b"transport"]) -> bool: ...
        def ClearField(self, field_name: Literal["transport", b"transport"]) -> None: ...

    INTEGRAL_FIELD_NUMBER: int
    ANCILLARY_FIELD_NUMBER: int
    @property
    def integral(self) -> VideoTransport.Integral: ...
    @property
    def ancillary(self) -> VideoTransport.Ancillary: ...
    def __init__(
        self,
        *,
        integral: VideoTransport.Integral | None = ...,
        ancillary: VideoTransport.Ancillary | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["ancillary", b"ancillary", "integral", b"integral"]) -> bool: ...
    def ClearField(self, field_name: Literal["ancillary", b"ancillary", "integral", b"integral"]) -> None: ...

@final
class AudioTransport(Message):
    DESCRIPTOR: Descriptor

    @final
    class Ancillary(Message):
        DESCRIPTOR: Descriptor

        @final
        class AvatarAudio(Message):
            DESCRIPTOR: Descriptor

            class _AnimationsType:
                ValueType = NewType("ValueType", int)
                V: typing_extensions.TypeAlias = ValueType

            class _AnimationsTypeEnumTypeWrapper(_EnumTypeWrapper[AudioTransport.Ancillary.AvatarAudio._AnimationsType.ValueType], type):
                DESCRIPTOR: EnumDescriptor
                TALKING_A: AudioTransport.Ancillary.AvatarAudio._AnimationsType.ValueType  # 0
                IDLE_A: AudioTransport.Ancillary.AvatarAudio._AnimationsType.ValueType  # 1
                TALKING_B: AudioTransport.Ancillary.AvatarAudio._AnimationsType.ValueType  # 2
                IDLE_B: AudioTransport.Ancillary.AvatarAudio._AnimationsType.ValueType  # 3
                BACKGROUND: AudioTransport.Ancillary.AvatarAudio._AnimationsType.ValueType  # 4

            class AnimationsType(_AnimationsType, metaclass=_AnimationsTypeEnumTypeWrapper): ...
            TALKING_A: AudioTransport.Ancillary.AvatarAudio.AnimationsType.ValueType  # 0
            IDLE_A: AudioTransport.Ancillary.AvatarAudio.AnimationsType.ValueType  # 1
            TALKING_B: AudioTransport.Ancillary.AvatarAudio.AnimationsType.ValueType  # 2
            IDLE_B: AudioTransport.Ancillary.AvatarAudio.AnimationsType.ValueType  # 3
            BACKGROUND: AudioTransport.Ancillary.AvatarAudio.AnimationsType.ValueType  # 4

            @final
            class DownloadableAvatarAnimations(Message):
                DESCRIPTOR: Descriptor

                FILESHA256_FIELD_NUMBER: int
                FILEENCSHA256_FIELD_NUMBER: int
                DIRECTPATH_FIELD_NUMBER: int
                MEDIAKEY_FIELD_NUMBER: int
                MEDIAKEYTIMESTAMP_FIELD_NUMBER: int
                OBJECTID_FIELD_NUMBER: int
                ANIMATIONSTYPE_FIELD_NUMBER: int
                fileSHA256: bytes
                fileEncSHA256: bytes
                directPath: str
                mediaKey: bytes
                mediaKeyTimestamp: int
                objectID: str
                animationsType: AudioTransport.Ancillary.AvatarAudio.AnimationsType.ValueType
                def __init__(
                    self,
                    *,
                    fileSHA256: bytes | None = ...,
                    fileEncSHA256: bytes | None = ...,
                    directPath: str | None = ...,
                    mediaKey: bytes | None = ...,
                    mediaKeyTimestamp: int | None = ...,
                    objectID: str | None = ...,
                    animationsType: AudioTransport.Ancillary.AvatarAudio.AnimationsType.ValueType | None = ...,
                ) -> None: ...
                def HasField(self, field_name: Literal["animationsType", b"animationsType", "directPath", b"directPath", "fileEncSHA256", b"fileEncSHA256", "fileSHA256", b"fileSHA256", "mediaKey", b"mediaKey", "mediaKeyTimestamp", b"mediaKeyTimestamp", "objectID", b"objectID"]) -> bool: ...
                def ClearField(self, field_name: Literal["animationsType", b"animationsType", "directPath", b"directPath", "fileEncSHA256", b"fileEncSHA256", "fileSHA256", b"fileSHA256", "mediaKey", b"mediaKey", "mediaKeyTimestamp", b"mediaKeyTimestamp", "objectID", b"objectID"]) -> None: ...

            POSEID_FIELD_NUMBER: int
            AVATARANIMATIONS_FIELD_NUMBER: int
            poseID: int
            @property
            def avatarAnimations(self) -> RepeatedCompositeFieldContainer[AudioTransport.Ancillary.AvatarAudio.DownloadableAvatarAnimations]: ...
            def __init__(
                self,
                *,
                poseID: int | None = ...,
                avatarAnimations: Iterable[AudioTransport.Ancillary.AvatarAudio.DownloadableAvatarAnimations] | None = ...,
            ) -> None: ...
            def HasField(self, field_name: Literal["poseID", b"poseID"]) -> bool: ...
            def ClearField(self, field_name: Literal["avatarAnimations", b"avatarAnimations", "poseID", b"poseID"]) -> None: ...

        SECONDS_FIELD_NUMBER: int
        AVATARAUDIO_FIELD_NUMBER: int
        seconds: int
        @property
        def avatarAudio(self) -> AudioTransport.Ancillary.AvatarAudio: ...
        def __init__(
            self,
            *,
            seconds: int | None = ...,
            avatarAudio: AudioTransport.Ancillary.AvatarAudio | None = ...,
        ) -> None: ...
        def HasField(self, field_name: Literal["avatarAudio", b"avatarAudio", "seconds", b"seconds"]) -> bool: ...
        def ClearField(self, field_name: Literal["avatarAudio", b"avatarAudio", "seconds", b"seconds"]) -> None: ...

    @final
    class Integral(Message):
        DESCRIPTOR: Descriptor

        class _AudioFormat:
            ValueType = NewType("ValueType", int)
            V: typing_extensions.TypeAlias = ValueType

        class _AudioFormatEnumTypeWrapper(_EnumTypeWrapper[AudioTransport.Integral._AudioFormat.ValueType], type):
            DESCRIPTOR: EnumDescriptor
            UNKNOWN: AudioTransport.Integral._AudioFormat.ValueType  # 0
            OPUS: AudioTransport.Integral._AudioFormat.ValueType  # 1

        class AudioFormat(_AudioFormat, metaclass=_AudioFormatEnumTypeWrapper): ...
        UNKNOWN: AudioTransport.Integral.AudioFormat.ValueType  # 0
        OPUS: AudioTransport.Integral.AudioFormat.ValueType  # 1

        TRANSPORT_FIELD_NUMBER: int
        AUDIOFORMAT_FIELD_NUMBER: int
        audioFormat: AudioTransport.Integral.AudioFormat.ValueType
        @property
        def transport(self) -> WAMediaTransport: ...
        def __init__(
            self,
            *,
            transport: WAMediaTransport | None = ...,
            audioFormat: AudioTransport.Integral.AudioFormat.ValueType | None = ...,
        ) -> None: ...
        def HasField(self, field_name: Literal["audioFormat", b"audioFormat", "transport", b"transport"]) -> bool: ...
        def ClearField(self, field_name: Literal["audioFormat", b"audioFormat", "transport", b"transport"]) -> None: ...

    INTEGRAL_FIELD_NUMBER: int
    ANCILLARY_FIELD_NUMBER: int
    @property
    def integral(self) -> AudioTransport.Integral: ...
    @property
    def ancillary(self) -> AudioTransport.Ancillary: ...
    def __init__(
        self,
        *,
        integral: AudioTransport.Integral | None = ...,
        ancillary: AudioTransport.Ancillary | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["ancillary", b"ancillary", "integral", b"integral"]) -> bool: ...
    def ClearField(self, field_name: Literal["ancillary", b"ancillary", "integral", b"integral"]) -> None: ...

@final
class DocumentTransport(Message):
    DESCRIPTOR: Descriptor

    @final
    class Ancillary(Message):
        DESCRIPTOR: Descriptor

        PAGECOUNT_FIELD_NUMBER: int
        pageCount: int
        def __init__(
            self,
            *,
            pageCount: int | None = ...,
        ) -> None: ...
        def HasField(self, field_name: Literal["pageCount", b"pageCount"]) -> bool: ...
        def ClearField(self, field_name: Literal["pageCount", b"pageCount"]) -> None: ...

    @final
    class Integral(Message):
        DESCRIPTOR: Descriptor

        TRANSPORT_FIELD_NUMBER: int
        @property
        def transport(self) -> WAMediaTransport: ...
        def __init__(
            self,
            *,
            transport: WAMediaTransport | None = ...,
        ) -> None: ...
        def HasField(self, field_name: Literal["transport", b"transport"]) -> bool: ...
        def ClearField(self, field_name: Literal["transport", b"transport"]) -> None: ...

    INTEGRAL_FIELD_NUMBER: int
    ANCILLARY_FIELD_NUMBER: int
    @property
    def integral(self) -> DocumentTransport.Integral: ...
    @property
    def ancillary(self) -> DocumentTransport.Ancillary: ...
    def __init__(
        self,
        *,
        integral: DocumentTransport.Integral | None = ...,
        ancillary: DocumentTransport.Ancillary | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["ancillary", b"ancillary", "integral", b"integral"]) -> bool: ...
    def ClearField(self, field_name: Literal["ancillary", b"ancillary", "integral", b"integral"]) -> None: ...

@final
class StickerTransport(Message):
    DESCRIPTOR: Descriptor

    @final
    class Ancillary(Message):
        DESCRIPTOR: Descriptor

        PAGECOUNT_FIELD_NUMBER: int
        HEIGHT_FIELD_NUMBER: int
        WIDTH_FIELD_NUMBER: int
        FIRSTFRAMELENGTH_FIELD_NUMBER: int
        FIRSTFRAMESIDECAR_FIELD_NUMBER: int
        MUSTACHETEXT_FIELD_NUMBER: int
        ISTHIRDPARTY_FIELD_NUMBER: int
        RECEIVERFETCHID_FIELD_NUMBER: int
        ACCESSIBILITYLABEL_FIELD_NUMBER: int
        pageCount: int
        height: int
        width: int
        firstFrameLength: int
        firstFrameSidecar: bytes
        mustacheText: str
        isThirdParty: bool
        receiverFetchID: str
        accessibilityLabel: str
        def __init__(
            self,
            *,
            pageCount: int | None = ...,
            height: int | None = ...,
            width: int | None = ...,
            firstFrameLength: int | None = ...,
            firstFrameSidecar: bytes | None = ...,
            mustacheText: str | None = ...,
            isThirdParty: bool | None = ...,
            receiverFetchID: str | None = ...,
            accessibilityLabel: str | None = ...,
        ) -> None: ...
        def HasField(self, field_name: Literal["accessibilityLabel", b"accessibilityLabel", "firstFrameLength", b"firstFrameLength", "firstFrameSidecar", b"firstFrameSidecar", "height", b"height", "isThirdParty", b"isThirdParty", "mustacheText", b"mustacheText", "pageCount", b"pageCount", "receiverFetchID", b"receiverFetchID", "width", b"width"]) -> bool: ...
        def ClearField(self, field_name: Literal["accessibilityLabel", b"accessibilityLabel", "firstFrameLength", b"firstFrameLength", "firstFrameSidecar", b"firstFrameSidecar", "height", b"height", "isThirdParty", b"isThirdParty", "mustacheText", b"mustacheText", "pageCount", b"pageCount", "receiverFetchID", b"receiverFetchID", "width", b"width"]) -> None: ...

    @final
    class Integral(Message):
        DESCRIPTOR: Descriptor

        TRANSPORT_FIELD_NUMBER: int
        ISANIMATED_FIELD_NUMBER: int
        RECEIVERFETCHID_FIELD_NUMBER: int
        isAnimated: bool
        receiverFetchID: str
        @property
        def transport(self) -> WAMediaTransport: ...
        def __init__(
            self,
            *,
            transport: WAMediaTransport | None = ...,
            isAnimated: bool | None = ...,
            receiverFetchID: str | None = ...,
        ) -> None: ...
        def HasField(self, field_name: Literal["isAnimated", b"isAnimated", "receiverFetchID", b"receiverFetchID", "transport", b"transport"]) -> bool: ...
        def ClearField(self, field_name: Literal["isAnimated", b"isAnimated", "receiverFetchID", b"receiverFetchID", "transport", b"transport"]) -> None: ...

    INTEGRAL_FIELD_NUMBER: int
    ANCILLARY_FIELD_NUMBER: int
    @property
    def integral(self) -> StickerTransport.Integral: ...
    @property
    def ancillary(self) -> StickerTransport.Ancillary: ...
    def __init__(
        self,
        *,
        integral: StickerTransport.Integral | None = ...,
        ancillary: StickerTransport.Ancillary | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["ancillary", b"ancillary", "integral", b"integral"]) -> bool: ...
    def ClearField(self, field_name: Literal["ancillary", b"ancillary", "integral", b"integral"]) -> None: ...

@final
class ContactTransport(Message):
    DESCRIPTOR: Descriptor

    @final
    class Ancillary(Message):
        DESCRIPTOR: Descriptor

        DISPLAYNAME_FIELD_NUMBER: int
        displayName: str
        def __init__(
            self,
            *,
            displayName: str | None = ...,
        ) -> None: ...
        def HasField(self, field_name: Literal["displayName", b"displayName"]) -> bool: ...
        def ClearField(self, field_name: Literal["displayName", b"displayName"]) -> None: ...

    @final
    class Integral(Message):
        DESCRIPTOR: Descriptor

        VCARD_FIELD_NUMBER: int
        DOWNLOADABLEVCARD_FIELD_NUMBER: int
        vcard: str
        @property
        def downloadableVcard(self) -> WAMediaTransport: ...
        def __init__(
            self,
            *,
            vcard: str | None = ...,
            downloadableVcard: WAMediaTransport | None = ...,
        ) -> None: ...
        def HasField(self, field_name: Literal["contact", b"contact", "downloadableVcard", b"downloadableVcard", "vcard", b"vcard"]) -> bool: ...
        def ClearField(self, field_name: Literal["contact", b"contact", "downloadableVcard", b"downloadableVcard", "vcard", b"vcard"]) -> None: ...
        def WhichOneof(self, oneof_group: Literal["contact", b"contact"]) -> Literal["vcard", "downloadableVcard"] | None: ...

    INTEGRAL_FIELD_NUMBER: int
    ANCILLARY_FIELD_NUMBER: int
    @property
    def integral(self) -> ContactTransport.Integral: ...
    @property
    def ancillary(self) -> ContactTransport.Ancillary: ...
    def __init__(
        self,
        *,
        integral: ContactTransport.Integral | None = ...,
        ancillary: ContactTransport.Ancillary | None = ...,
    ) -> None: ...
    def HasField(self, field_name: Literal["ancillary", b"ancillary", "integral", b"integral"]) -> bool: ...
    def ClearField(self, field_name: Literal["ancillary", b"ancillary", "integral", b"integral"]) -> None: ...
