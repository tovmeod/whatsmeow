from signal_protocol.curve import PublicKey, PrivateKey

class IdentityKey:
	def __init__(self, public_key: bytes) -> None: ...
	def public_key(self) -> PublicKey: ...
	def serialize(self) -> bytes: ...

	def __eq__(self, other: object) -> bool: ...
	def __ne__(self, other: object) -> bool: ...

class IdentityKeyPair:
	def __init__(self, identity_key: IdentityKey, private_key: PrivateKey) -> None: ...

	@staticmethod
	def from_bytes(identity_key_pair_bytes: bytes) -> "IdentityKeyPair": ...

	@staticmethod
	def generate() -> "IdentityKeyPair": ...

	def identity_key(self) -> IdentityKey: ...
	def private_key(self) -> PrivateKey: ...
	def public_key(self) -> PublicKey: ...
	def serialize(self) -> bytes: ...
